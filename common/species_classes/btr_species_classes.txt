# Number of entries controlls amount to choose from in designer  I.E.   "mol1" "mol2" "mol3" "mol4"
# graphical_culture is connected to the looks used for ships and cities, see "common/graphical_culture/"
# Portraits here are one you can choose from in the character creater. For prescripted races they are grabbed straight from the .gfx file.
# playable=(yes/no)/trigger, default is yes, if this species class can is playable
# randomized=(yes/no)/trigger, default is yes, if this species class is randomized
# custom_portraits
#	randomized = trigger, default is no, to specify if portraits are randomized
#	playable = trigger, default is yes, to specify if portraits are playable
#	portraits, list portrait keys
# species_trait_points: base number of species trait points available for this species class
# species_max_traits: maximum number of traits that species of this class can have (doesn't count those with cost == 0)
# possible: ethics/government requirements; see common/governments/readme_requirements.txt
# gender: yes|no (default: yes). whether the species have a gender
# portrait_modding: yes|no (default: no). whether the portrait can be modified with genemodding/robomodding

### MAIN ###


ASA = { 
	archetype = BIOLOGICAL 
	portraits = { "btr_asari" } 
	graphical_culture = mec_asari_01 
	move_pop_sound_effect = "moving_pop_confirmation" 
	uplifted_into = "ASA" 
	uplifted_portraits = { "btr_asari" } 
	gender = no
}

SAL = { 
	archetype = BIOLOGICAL 
	portraits = { "btr_salarian" } 
	graphical_culture = mammalian_01 
	move_pop_sound_effect = "moving_pop_confirmation" 
	uplifted_into = "SAL" 
	uplifted_portraits = { "btr_salarian" } 
}

TUR = { 
	archetype = BIOLOGICAL 
	portraits = { "btr_turian" } 
	graphical_culture = mammalian_01 
	move_pop_sound_effect = "moving_pop_confirmation" 
	uplifted_into = "TUR" 
	uplifted_portraits = { "btr_turian" } 
}

# HUM = { 
# 	archetype = BIOLOGICAL 
# 	portraits = { "human" } 
# 	graphical_culture = sa_01 
# 	move_pop_sound_effect = "moving_pop_confirmation" 
# 	uplifted_into = "HUM" 
# 	uplifted_portraits = { "human" } 
# }

# ELC = { 
# 	archetype = BIOLOGICAL 
# 	portraits = { "btr_elcor" } 
# 	graphical_culture = mammalian_01 
# 	move_pop_sound_effect = "moving_pop_confirmation" 
# 	uplifted_into = "ELC" 
# 	uplifted_portraits = { "btr_elcor" } 
# }

# VOL = { 
# 	archetype = BIOLOGICAL 
# 	portraits = { "btr_volus" } 
# 	graphical_culture = mammalian_01 
# 	move_pop_sound_effect = "moving_pop_confirmation" 
# 	uplifted_into = "VOL" 
# 	uplifted_portraits = { "btr_volus" }
# }

# HAN = { 
# 	archetype = BIOLOGICAL 
# 	portraits = { "btr_hanar" } 
# 	graphical_culture = mammalian_01 
# 	move_pop_sound_effect = "moving_pop_confirmation" 
# 	uplifted_into = "HAN" 
# 	uplifted_portraits = { "btr_hanar" } 
# }

# BAT = { 
# 	archetype = BIOLOGICAL 
# 	portraits = { "btr_batarian" } 
# 	graphical_culture = mammalian_01 
# 	move_pop_sound_effect = "moving_pop_confirmation" 
# 	uplifted_into = "BAT" 
# 	uplifted_portraits = { "btr_batarian" } 
# }

# KRO = { 
# 	archetype = BIOLOGICAL 
# 	portraits = { "btr_krogan" } 
# 	graphical_culture = mammalian_01 
# 	move_pop_sound_effect = "moving_pop_confirmation" 
# 	uplifted_into = "KRO" 
# 	uplifted_portraits = { "btr_krogan" } 
# }

# QUA = { 
# 	archetype = BIOLOGICAL 
# 	portraits = { "btr_quarian" } 
# 	graphical_culture = quar_01 
# 	move_pop_sound_effect = "moving_pop_confirmation" 
# 	uplifted_into = "QUA" 
# 	uplifted_portraits = { "btr_quarian" } 
# }

# DRE = { 
# 	archetype = BIOLOGICAL 
# 	portraits = { "btr_drell" } 
# 	graphical_culture = mammalian_01 
# 	move_pop_sound_effect = "moving_pop_confirmation" 
# 	uplifted_into = "DRE" 
# 	uplifted_portraits = { "btr_drell" } 
# }


# VOR = { 
# 	archetype = BIOLOGICAL 
# 	portraits = { "btr_vorcha" } 
# 	graphical_culture = mammalian_01 
# 	move_pop_sound_effect = "moving_pop_confirmation" 
# 	uplifted_into = "VOR" 
# 	uplifted_portraits = { "btr_vorcha" } 
# }

# FOR = {
# 	archetype = BIOLOGICAL
# 	portraits = { "art3" }
# 	graphical_culture = arthropoid_01
# 	move_pop_sound_effect = "moving_pop_confirmation"
# 	uplifted_into = "FOR"
# 	uplifted_portraits = { "art3" }
# 	gender = no
# }

# LYS = { 
# 	archetype = BIOLOGICAL 
# 	portraits = { "btr_lystheni" } 
# 	graphical_culture = mammalian_01 
# 	move_pop_sound_effect = "moving_pop_confirmation" 
# 	uplifted_into = "LYS" 
# 	uplifted_portraits = { "btr_lystheni" } 
# }

# GOT = { 
# 	archetype = BIOLOGICAL 
# 	portraits = { "btr_gothones" } 
# 	graphical_culture = reptilian_01 
# 	move_pop_sound_effect = "moving_pop_confirmation" 
# 	uplifted_into = "GOT" 
# 	uplifted_portraits = { "btr_gothones" } 
# }

# YAH = { 
# 	archetype = BIOLOGICAL 
# 	portraits = { "btr_yahg" } 
# 	graphical_culture = mammalian_01 
# 	move_pop_sound_effect = "moving_pop_confirmation" 
# 	uplifted_into = "YAH" 
# 	uplifted_portraits = { "btr_yahg" } 
# }

# RAL = {
# 	archetype = BIOLOGICAL
# 	portraits = { "avi11" }
# 	graphical_culture = arthropoid_01
# 	move_pop_sound_effect = "moving_pop_confirmation"
# 	uplifted_into = "RAL"
# 	uplifted_portraits = { "avi11" }
# 	gender = no
# }

# GTH = { 
# 	archetype = BIOLOGICAL 
# 	portraits = { "btr_geth" } 
# 	graphical_culture = mammalian_01 
# 	move_pop_sound_effect = "moving_pop_confirmation" 
# 	uplifted_into = "GTH" 
# 	uplifted_portraits = { "btr_geth" } 
# }

# RAC = { 
# 	archetype = BIOLOGICAL 
# 	portraits = { "btr_rachni" } 
# 	graphical_culture = molluscoid_01 
# 	move_pop_sound_effect = "moving_pop_confirmation" 
# 	uplifted_into = "RAC" 
# 	uplifted_portraits = { "btr_rachni" } 
# }

# COL = { 
# 	archetype = MACHINE 
# 	portraits = { "btr_collectors" } 
# 	graphical_culture = btr_collectors_01 
# 	move_pop_sound_effect = "moving_pop_confirmation" 
# 	uplifted_into = "COL" 
# 	uplifted_portraits = { "btr_collectors" } 
# 	gender = no
# }


# # HSK = { 
# # 	archetype = MACHINE 
# # 	playable = { always = no } 
# # 	portraits = { "husk" } 
# # 	graphical_culture = mammalian_01 
# # 	move_pop_sound_effect = "moving_pop_confirmation" 
# # 	uplifted_into = "HSK" 
# # 	uplifted_portraits = { "husk" } 
# # 	gender = no
# # }



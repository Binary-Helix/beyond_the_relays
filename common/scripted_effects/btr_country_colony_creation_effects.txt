generate_asari_republics_colonies = {
	every_system = {
		limit = {
			has_star_flag = asari_republics_system
		}
		every_system_planet = {
			if = {
				limit = {
					has_planet_flag = sanves_planet
				}
				set_owner = event_target:asari_republics
				create_colony = {
					owner = event_target:asari_republics
					species = event_target:asariSpecies
				}
				generate_asr_sanves_colony_buildings = yes
				generate_asr_sanves_pops = yes
				save_global_event_target_as = asr_sanves_colony
				log = "Asari Republics Colony (Sanves) Spawned"
			}
			if = {
				limit = {
					has_planet_flag = lusia_planet
				}
				set_owner = event_target:asari_republics
				create_colony = {
					owner = event_target:asari_republics
					species = event_target:asariSpecies
					ethos = owner
				}
				generate_asr_lusia_colony_buildings = yes
				generate_asr_lusia_pops = yes
				save_global_event_target_as = asr_lusia_colony
				log = "Asari Republics Colony (Lusia) Spawned"
			}
			if = {
				limit = {
					has_planet_flag = niacal_planet
				}
				set_owner = event_target:asari_republics
				create_colony = {
					owner = event_target:asari_republics
					species = event_target:asariSpecies
					ethos = owner
				}
				generate_asr_niacal_colony_buildings = yes
				generate_asr_niacal_pops = yes
				save_global_event_target_as = asr_niacal_colony
				log = "Asari Republics Colony (Niacal) Spawned"
			}
			if = {
				limit = {
					has_planet_flag = espota_station
				}
				set_owner = event_target:asari_republics
				create_colony = {
					owner = event_target:asari_republics
					species = event_target:asariSpecies
					ethos = owner
				}
				generate_asr_espota_station_buildings = yes
				generate_asr_espota_pops = yes
				save_global_event_target_as = asr_espota_colony
				log = "Asari Republics Colony (Espota Station) Spawned"
			}
			if = {
				limit = {
					has_planet_flag = agessia_planet
				}
				set_owner = event_target:asari_republics
				create_colony = {
					owner = event_target:asari_republics
					species = event_target:asariSpecies
					ethos = owner
				}
				generate_asr_agessia_colony_buildings = yes
				generate_asr_agessia_pops = yes
				save_global_event_target_as = asr_agessia_colony
				log = "Asari Republics Colony (Agessia) Spawned"
			}			
			if = {
				limit = {
					has_planet_flag = hyetiana_planet
				}
				set_owner = event_target:asari_republics
				create_colony = {
					owner = event_target:asari_republics
					species = event_target:asariSpecies
					ethos = owner
				}
				generate_asr_hyetiana_colony_buildings = yes
				generate_asr_hyetiana_pops = yes
				save_global_event_target_as = asr_hyetiana_colony
				log = "Asari Republics Colony (Hyetiana) Spawned"
			}
			if = {
				limit = {
					has_planet_flag = nevos_planet
				}
				set_owner = event_target:asari_republics
				create_colony = {
					owner = event_target:asari_republics
					species = event_target:asariSpecies
					ethos = owner
				}
				generate_asr_nevos_colony_buildings = yes
				generate_asr_nevos_pops = yes
				save_global_event_target_as = asr_nevos_colony
				log = "Asari Republics Colony (Nevos) Spawned"
			}
			if = {
				limit = {
					has_planet_flag = cyone_planet
				}
				set_owner = event_target:asari_republics
				create_colony = {
					owner = event_target:asari_republics
					species = event_target:asariSpecies
					ethos = owner
				}
				generate_asr_cyone_colony_buildings = yes
				generate_asr_cyone_pops = yes
				save_global_event_target_as = asr_cyone_colony
				log = "Asari Republics Colony (Cyone) Spawned"
			}
			if = {
				limit = {
					has_planet_flag = trategos_planet
				}
				set_owner = event_target:asari_republics
				create_colony = {
					owner = event_target:asari_republics
					species = event_target:asariSpecies
					ethos = owner
				}
				generate_asr_trategos_colony_buildings = yes
				generate_asr_trategos_pops = yes
				save_global_event_target_as = asr_trategos_colony
				log = "Asari Republics Colony (Trategos) Spawned"
			}
			if = {
				limit = {
					has_planet_flag = lesuss_planet
				}
				set_owner = event_target:asari_republics
				create_colony = {
					owner = event_target:asari_republics
					species = event_target:asariSpecies
					ethos = owner
				}
				generate_asr_lesuss_colony_buildings = yes
				generate_asr_lesuss_pops = yes
				save_global_event_target_as = asr_lesuss_colony
				log = "Asari Republics Colony (Lesuss) Spawned"
			}	
			if = {
				limit = {
					has_planet_flag = malkos_planet
				}
				set_owner = event_target:asari_republics
				create_colony = {
					owner = event_target:asari_republics
					species = event_target:asariSpecies
					ethos = owner
				}
				generate_asr_malkos_colony_buildings = yes
				generate_asr_malkos_pops = yes
				save_global_event_target_as = asr_malkos_colony
				log = "Asari Republics Colony (Malkos) Spawned"
			}
			if = {
				limit = {
					has_planet_flag = charias_planet
				}
				set_owner = event_target:asari_republics
				create_colony = {
					owner = event_target:asari_republics
					species = event_target:asariSpecies
					ethos = owner
				}
				generate_asr_charias_colony_buildings = yes
				generate_asr_charias_pops = yes
				save_global_event_target_as = asr_charias_colony
				log = "Asari Republics Colony (Charias) Spawned"
			}	
			if = {
				limit = {
					has_planet_flag = diras_planet
				}
				set_owner = event_target:asari_republics
				create_colony = {
					owner = event_target:asari_republics
					species = event_target:asariSpecies
					ethos = owner
				}
				generate_asr_diras_colony_buildings = yes
				generate_asr_diras_pops = yes
				save_global_event_target_as = asr_diras_colony
				log = "Asari Republics Colony (Diras) Spawned"
			}															
		}
	}	
}

generate_salarian_union_colonies = {
	every_system = {
		limit = {
			has_star_flag = salarian_union_system
		}
		every_system_planet = {
			if = {
				limit = {
					has_planet_flag = mannovai_planet
				}
				set_owner = event_target:salarian_union
				create_colony = {
					owner = event_target:salarian_union
					species = event_target:salarianSpecies
					ethos = owner
				}
				generate_sal_mannovai_colony_buildings = yes
				generate_sal_mannovai_pops = yes
				save_global_event_target_as = sal_sanves_colony
				log = "Salarian Union Colony (Mannovai) Spawned"
			}
			if = {
				limit = {
					has_planet_flag = nasurn_planet
				}
				set_owner = event_target:salarian_union
				create_colony = {
					owner = event_target:salarian_union
					species = event_target:salarianSpecies
					ethos = owner
				}
				generate_sal_nasurn_colony_buildings = yes
				generate_sal_nasurn_pops = yes
				save_global_event_target_as = sal_nasurn_colony
				log = "Salarian Union Colony (Nasurn) Spawned"
			}
			if = {
				limit = {
					has_planet_flag = jaeto_planet
				}
				set_owner = event_target:salarian_union
				create_colony = {
					owner = event_target:salarian_union
					species = event_target:salarianSpecies
					ethos = owner
				}
				generate_sal_jaeto_colony_buildings = yes
				generate_sal_jaeto_pops = yes
				save_global_event_target_as = sal_jaeto_colony
				log = "Salarian Union Colony (Jaeto) Spawned"
			}
			if = {
				limit = {
					has_planet_flag = gataly_planet
				}
				set_owner = event_target:salarian_union
				create_colony = {
					owner = event_target:salarian_union
					species = event_target:salarianSpecies
					ethos = owner
				}
				generate_sal_gataly_colony_buildings = yes
				generate_sal_gataly_pops = yes
				save_global_event_target_as = sal_gataly_colony
				log = "Salarian Union Colony (Gataly) Spawned"
			}
			if = {
				limit = {
					has_planet_flag = senoquol_planet
				}
				set_owner = event_target:salarian_union
				create_colony = {
					owner = event_target:salarian_union
					species = event_target:salarianSpecies
					ethos = owner
				}
				generate_sal_senoquol_colony_buildings = yes
				generate_sal_senoquol_pops = yes
				save_global_event_target_as = sal_senoquol_colony
				log = "Salarian Union Colony (Senoquol) Spawned"
			}			
			if = {
				limit = {
					has_planet_flag = saetabelo_planet
				}
				set_owner = event_target:salarian_union
				create_colony = {
					owner = event_target:salarian_union
					species = event_target:salarianSpecies
					ethos = owner
				}
				generate_sal_saetabelo_colony_buildings = yes
				generate_sal_saetabelo_pops = yes
				save_global_event_target_as = sal_saetabelo_colony
				log = "Salarian Union Colony (Saetabelo) Spawned"
			}
			if = {
				limit = {
					has_planet_flag = voya_planet
				}
				set_owner = event_target:salarian_union
				create_colony = {
					owner = event_target:salarian_union
					species = event_target:salarianSpecies
					ethos = owner
				}
				generate_sal_voya_colony_buildings = yes
				generate_sal_voya_pops = yes
				save_global_event_target_as = sal_voya_colony
				log = "Salarian Union Colony (Voya) Spawned"
			}
			if = {
				limit = {
					has_planet_flag = gorot_planet
				}
				set_owner = event_target:salarian_union
				create_colony = {
					owner = event_target:salarian_union
					species = event_target:salarianSpecies
					ethos = owner
				}
				generate_sal_gorot_colony_buildings = yes
				generate_sal_gorot_pops = yes
				save_global_event_target_as = sal_gorot_colony
				log = "Salarian Union Colony (Gorot) Spawned"
			}
			if = {
				limit = {
					has_planet_flag = olor_planet
				}
				set_owner = event_target:salarian_union
				create_colony = {
					owner = event_target:salarian_union
					species = event_target:salarianSpecies
					ethos = owner
				}
				generate_sal_olor_colony_buildings = yes
				generate_sal_olor_pops = yes
				save_global_event_target_as = sal_olor_colony
				log = "Salarian Union Colony (Olor) Spawned"
			}
			if = {
				limit = {
					has_planet_flag = rannandril_planet
				}
				set_owner = event_target:salarian_union
				create_colony = {
					owner = event_target:salarian_union
					species = event_target:salarianSpecies
					ethos = owner
				}
				generate_sal_rannandril_colony_buildings = yes
				generate_sal_rannandril_pops = yes
				save_global_event_target_as = sal_rannandril_colony
				log = "Salarian Union Colony (Rannandril) Spawned"
			}	
			if = {
				limit = {
					has_planet_flag = dagnes_planet
				}
				set_owner = event_target:salarian_union
				create_colony = {
					owner = event_target:salarian_union
					species = event_target:salarianSpecies
					ethos = owner
				}
				generate_sal_dagnes_colony_buildings = yes
				generate_sal_dagnes_pops = yes
				save_global_event_target_as = sal_dagnes_colony
				log = "Salarian Union Colony (Dagnes) Spawned"
			}
			if = {
				limit = {
					has_planet_flag = halegeuse_planet
				}
				set_owner = event_target:salarian_union
				create_colony = {
					owner = event_target:salarian_union
					species = event_target:salarianSpecies
					ethos = owner
				}
				generate_sal_halegeuse_colony_buildings = yes
				generate_sal_halegeuse_pops = yes
				save_global_event_target_as = sal_halegeuse_colony
				log = "Salarian Union Colony (Halegeuse) Spawned"
			}	
			if = {
				limit = {
					has_planet_flag = jarrahe_station
				}
				set_owner = event_target:salarian_union
				create_colony = {
					owner = event_target:salarian_union
					species = event_target:salarianSpecies
					ethos = owner
				}
				generate_sal_jarrahe_colony_buildings = yes
				generate_sal_jarrahe_pops = yes
				save_global_event_target_as = sal_jarrahe_colony
				log = "Salarian Union Colony (Jarrahe Station) Spawned"
			}															
		}
	}	
}

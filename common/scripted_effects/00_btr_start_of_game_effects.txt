# This is called after game start
generate_btr_home_system_resources = {
	optimize_memory
	every_system_planet = {
		limit = {
			colonizable_planet = no
			NOT = { has_planet_flag = ignore_startup_effect }
		}
		prevent_anomaly = yes
		#clear_deposits = yes
	}

	# ENERGY
	system_star = {
		set_planet_flag = starting_mining_target
		set_planet_flag = starting_deposit
		set_deposit = d_energy_5
		if = {
			limit = { 
				is_planet_class = pc_m_giant_star		
			}
			remove_deposit = d_energy_5
			add_deposit = d_energy_6
		}
		if = {
			limit = { 
				is_planet_class = pc_g_giant_star
				is_planet_class = pc_k_giant_star
				is_planet_class = pc_k_giant_star
				is_planet_class = pc_m_super_star		
			}
			remove_deposit = d_energy_5
			add_deposit = d_energy_7
		}
		if = {
			limit = { 
				is_planet_class = pc_o_super_star
				is_planet_class = pc_a_super_star
				is_planet_class = pc_a_super_star
				is_planet_class = pc_b_super_star
				is_planet_class = pc_f_super_star
				is_planet_class = pc_g_super_star
				is_planet_class = pc_k_super_star	
			}
			remove_deposit = d_energy_5
			add_deposit = d_energy_8
		}
		if = {
			limit = { 
				is_planet_class = pc_o_hyper_star
			}
			remove_deposit = d_energy_5
			add_deposit = d_energy_10
		}
	}
	random_system_planet = {
		limit = {
			NOT = { has_planet_flag = starting_deposit }
			NOT = { has_planet_flag = ignore_startup_effect }
			OR = {
				is_planet_class = pc_o_star
				is_planet_class = pc_o_super_star
				is_planet_class = pc_o_hyper_star	
				is_planet_class = pc_a_star
				is_planet_class = pc_a_super_star
				is_planet_class = pc_b_star
				is_planet_class = pc_b_super_star
				is_planet_class = pc_f_star
				is_planet_class = pc_f_super_star
				is_planet_class = pc_g_star
				is_planet_class = pc_g_giant_star
				is_planet_class = pc_g_super_star
				is_planet_class = pc_k_star
				is_planet_class = pc_k_giant_star
				is_planet_class = pc_k_super_star	
				is_planet_class = pc_m_star
				is_planet_class = pc_m_giant_star
				is_planet_class = pc_m_super_star
				is_planet_class = pc_m_hyper_star
				is_planet_class = pc_gas_giant
				is_planet_class = pc_hot_giant
				is_planet_class = pc_t_star
				is_planet_class = pc_l_star
				is_planet_class = pc_y_star	
				is_planet_class = pc_d_star	
			}
		}
		set_planet_flag = starting_mining_target
		set_planet_flag = starting_deposit
		set_deposit = d_energy_5
		if = {
			limit = { 
				is_planet_class = pc_m_giant_star		
			}
			remove_deposit = d_energy_5
			add_deposit = d_energy_6
		}
		if = {
			limit = { 
				is_planet_class = pc_g_giant_star
				is_planet_class = pc_k_giant_star
				is_planet_class = pc_k_giant_star
				is_planet_class = pc_m_super_star		
			}
			remove_deposit = d_energy_5
			add_deposit = d_energy_7
		}
		if = {
			limit = { 
				is_planet_class = pc_o_super_star
				is_planet_class = pc_a_super_star
				is_planet_class = pc_a_super_star
				is_planet_class = pc_b_super_star
				is_planet_class = pc_f_super_star
				is_planet_class = pc_g_super_star
				is_planet_class = pc_k_super_star	
			}
			remove_deposit = d_energy_5
			add_deposit = d_energy_8
		}
		if = {
			limit = { 
				is_planet_class = pc_o_hyper_star
			}
			remove_deposit = d_energy_5
			add_deposit = d_energy_10
		}
	}
}

# This is called after game start
generate_btr_start_deposits_and_blockers = {
	optimize_memory
	clear_deposits = yes

	#Asari Republics
	if = {
		limit = { 
			has_planet_flag = thessia_planet
		}
		generate_asr_thessia_deposits = yes
	}
	#Salarian Union
	if = {
		limit = { 
			has_planet_flag = surkesh_planet
		}
		generate_sal_surkesh_deposits = yes
	}
	#Turian Hierarchy
	if = {
		limit = { 
			has_planet_flag = palaven_planet
		}
		generate_tur_palaven_deposits = yes
	}
	#Systems Alliance
	if = {
		limit = { 
			has_planet_flag = earth_planet
		}
		generate_sys_earth_deposits = yes
	}
	#Courts of Dekuuna
	if = {
		limit = { 
			has_planet_flag = dekuuna_planet
		}
		generate_cod_dekuuna_deposits = yes
	}
	#Vol Protectorate
	if = {
		limit = { 
			has_planet_flag = irune_planet
		}
		generate_vol_irune_deposits = yes
	}
	#Illuminated Primacy
	if = {
		limit = { 
			has_planet_flag = kahje_planet
		}
		generate_han_kahje_deposits = yes
	}
	#Hegemony of Khar'shan
	if = {
		limit = { 
			has_planet_flag = kharshan_planet
		}
		generate_bat_kharshan_deposits = yes
	}
	#Aralakh Kahmat
	if = {
		limit = { 
			has_planet_flag = tuchanka_planet
		}
		generate_kro_tuchanka_deposits = yes
	}
	#Migrant Fleet
	if = {
		limit = { 
			has_planet_flag = chayym_ship_planet
		}
		generate_qua_chayym_deposits = yes
	}
	if = {
		limit = { 
			has_planet_flag = shellen_ship_planet
		}
		generate_qua_shellen_deposits = yes
	}
	if = {
		limit = { 
			has_planet_flag = rayya_ship_planet
		}
		generate_qua_rayya_deposits = yes
	}
	if = {
		limit = { 
			has_planet_flag = civilian_fleet_planet
		}
		generate_qua_civilian_fleet_deposits = yes
	}
	if = {
		limit = { 
			has_planet_flag = special_projects_fleet_planet
		}
		generate_qua_special_projects_fleet_deposits = yes
	}
	if = {
		limit = { 
			has_planet_flag = heavy_fleet_planet
		}
		generate_qua_heavy_fleet_deposits = yes
	}
	if = {
		limit = { 
			has_planet_flag = patrol_fleet_planet
		}
		generate_qua_patrol_fleet_deposits = yes
	}
	#Cerberus
	if = {
		limit = { 
			has_planet_flag = cronos_station
		}
		generate_cer_cronos_deposits = yes
	}	
	#Omega
	if = {
		limit = { 
			has_planet_flag = omega_station
		}
		generate_omega_deposits = yes
	}		
	#Illum Corporate Interests
	if = {
		limit = { 
			has_planet_flag = illium_planet
		}
		generate_illium_deposits = yes
	}	
	#Caleston Directorate
	if = {
		limit = { 
			has_planet_flag = caleston_planet
		}
		generate_caleston_deposits = yes
	}	
	#Remnants of Rakhana
	if = {
		limit = { 
			has_planet_flag = rakhana_planet
		}
		generate_dre_rakhana_deposits = yes
	}	
	#Vorcha Clandom
	if = {
		limit = { 
			has_planet_flag = heshtok_planet
		}
		generate_vor_heshtok_deposits = yes
	}		
	#Sed'riicae Collective
	if = {
		limit = { 
			has_planet_flag = sedriicae_planet
		}
		generate_sed_sedriicae_deposits = yes
	}	
	#Lystheni Order
	if = {
		limit = { 
			has_planet_flag = sepkai_planet
		}
		generate_lys_sepkai_deposits = yes
	}		
	#Gothones Remnant
	if = {
		limit = { 
			has_planet_flag = vindicta_planet
		}
		generate_got_vindicta_deposits = yes
	}			
	#Parnack Regime
	if = {
		limit = { 
			has_planet_flag = parnack_planet
		}
		generate_yah_parnack_deposits = yes
	}		
	#Raloi Republic
	if = {
		limit = { 
			has_planet_flag = turvess_planet
		}
		generate_ral_turvess_deposits = yes
	}		
	#Geth Consensus
	if = {
		limit = { 
			has_planet_flag = rannoch_planet
		}
		generate_get_rannoch_deposits = yes
	}		
	#Disciples of Nazara
	if = {
		limit = { 
			has_planet_flag = heretic_station
		}
		generate_naz_heretic_station_deposits = yes
	}	
	#Rachni Hive
	if = {
		limit = { 
			has_planet_flag = utukku_planet
		}
		generate_rac_utukku_deposits = yes
	}	
	#The Collectors
	if = {
		limit = { 
			has_planet_flag = collector_base
		}
		generate_col_collector_base_deposits = yes
	}	
	if = { 
		limit = {
			has_planet_flag = citadel_station
		}
		generate_csec_citadel_council_deposits = yes
	}

	if = {
		limit = {
			OR = {
				is_planet_class = pc_continental
				is_planet_class = pc_dextro_continental
				is_planet_class = pc_highgrav_continental
				is_planet_class = pc_dextro_highgrav_continental
			}
		}

		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_rushing_waterfalls
		add_deposit = d_tempestous_mountain
		if = {
			limit = { 
				owner = { 
					is_machine_empire = yes 
				} 
			}
			add_deposit = d_rushing_waterfalls
		}

		# 3 + 3 mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_prosperous_mesa
		add_deposit = d_rich_mountain

		# 4 + 3 farming
		add_deposit = d_rugged_woods
		add_deposit = d_fertile_lands
		if = {
			limit = { 
				owner = { 
					is_machine_empire = no 
				} 
			}
			add_deposit = d_rugged_woods
			add_deposit = d_black_soil
		}
	}

	if = {
		limit = {
			OR = {
				is_planet_class = pc_tropical
				is_planet_class = pc_dextro_tropical
				is_planet_class = pc_highgrav_tropical
				is_planet_class = pc_dextro_highgrav_tropical
			}
		}

		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_rushing_waterfalls
		add_deposit = d_tempestous_mountain
		if = {
			limit = { 
				owner = { 
					is_machine_empire = yes 
				} 
			}
			add_deposit = d_rushing_waterfalls
		}

		# 3 + 3 mining
		add_deposit = d_mineral_fields
		add_deposit = d_prosperous_mesa
		add_deposit = d_submerged_ore_veins

		# 4 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_green_hills
		add_deposit = d_lush_jungle
		if = {
			limit = { 
				owner = { 
					is_machine_empire = no 
				} 
			}
			add_deposit = d_green_hills
			add_deposit = d_tropical_island
		}
	}

	if = {
		limit = {
			OR = {
				is_planet_class = pc_ocean
				is_planet_class = pc_dextro_ocean
				is_planet_class = pc_highgrav_ocean
				is_planet_class = pc_dextro_highgrav_ocean
			}
		}

		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_rushing_waterfalls
		add_deposit = d_underwater_vent
		if = {
			limit = { 
				owner = { 
					is_machine_empire = yes 
				} 
			}
			add_deposit = d_rushing_waterfalls
		}

		# 3 + 3 mining
		add_deposit = d_mineral_fields
		add_deposit = d_ore_rich_caverns
		add_deposit = d_submerged_ore_veins

		# 4 + 3 farming
		add_deposit = d_green_hills
		add_deposit = d_lush_jungle
		if = {
			limit = { 
				owner = { 
					is_machine_empire = no 
				} 
			}
			add_deposit = d_green_hills
			add_deposit = d_teeming_reef
		}
	}

	if = {
		limit = {
			OR = {
				is_planet_class = pc_arctic
				is_planet_class = pc_dextro_arctic
				is_planet_class = pc_highgrav_arctic
				is_planet_class = pc_dextro_highgrav_arctic
			}
		}

		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_frozen_gas_lake
		add_deposit = d_geothermal_vent
		if = {
			limit = { 
				owner = { 
					is_machine_empire = yes 
				} 
			}
			add_deposit = d_frozen_gas_lake
		}

		# 3 + 3 mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns
		add_deposit = d_rich_mountain

		# 4 + 3 farming
		add_deposit = d_lichen_fields
		add_deposit = d_fungal_caves
		if = {
			limit = { 
				owner = { 
					is_machine_empire = no
				} 
			}
			add_deposit = d_lichen_fields
			add_deposit = d_fungal_forest
		}
	}

	if = {
		limit = {
			OR = {
				is_planet_class = pc_tundra
				is_planet_class = pc_dextro_tundra
				is_planet_class = pc_highgrav_tundra
				is_planet_class = pc_dextro_highgrav_tundra
			}
		}

		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_frozen_gas_lake
		add_deposit = d_geothermal_vent
		if = {
			limit = { 
				owner = { 
					is_machine_empire = yes 
				} 
			}
			add_deposit = d_frozen_gas_lake
		}

		# 3 + 3 mining
		add_deposit = d_mineral_fields
		add_deposit = d_ore_rich_caverns
		add_deposit = d_rich_mountain

		# 4 + 3 farming
		add_deposit = d_forgiving_tundra
		add_deposit = d_fungal_caves
		if = {
			limit = { 
				owner = { 
					is_machine_empire = no 
				} 
			}
			add_deposit = d_forgiving_tundra
			add_deposit = d_fungal_forest
		}
	}

	if = {
		limit = {
			OR = {
				is_planet_class = pc_alpine
				is_planet_class = pc_dextro_alpine
				is_planet_class = pc_highgrav_alpine
				is_planet_class = pc_dextro_highgrav_alpine
			}
		}

		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_frozen_gas_lake
		add_deposit = d_tempestous_mountain
		if = {
			limit = { 
				owner = { 
					is_machine_empire = yes 
				} 
			}
			add_deposit = d_frozen_gas_lake
		}

		# 3 + 3 mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns
		add_deposit = d_rich_mountain

		# 4 + 3 farming
		add_deposit = d_forgiving_tundra
		add_deposit = d_fungal_caves
		if = {
			limit = { 
				owner = { 
					is_machine_empire = no 
				} 
			}
			add_deposit = d_forgiving_tundra
			add_deposit = d_fungal_forest
		}
	}

	if = {
		limit = {
			OR = {
				is_planet_class = pc_desert
				is_planet_class = pc_dextro_desert
				is_planet_class = pc_highgrav_desert
				is_planet_class = pc_dextro_highgrav_desert
			}
		}

		# 3 + 3 energy
		add_deposit = d_arid_highlands
		add_deposit = d_searing_desert
		add_deposit = d_geothermal_vent
		if = {
			limit = { 
				owner = { 
					is_machine_empire = yes 
				} 
			}
			add_deposit = d_searing_desert
		}

		# 3 + 3 mining
		add_deposit = d_mineral_fields
		add_deposit = d_ore_rich_caverns
		add_deposit = d_rich_mountain

		# 4 + 3 farming
		add_deposit = d_nutritious_mudland
		add_deposit = d_great_river
		if = {
			limit = { 
				owner = { 
					is_machine_empire = no 
				} 
			}
			add_deposit = d_nutritious_mudland
			add_deposit = d_marvelous_oasis
		}
	}

	if = {
		limit = {
			OR = {
				is_planet_class = pc_arid
				is_planet_class = pc_dextro_arid
				is_planet_class = pc_highgrav_arid
				is_planet_class = pc_dextro_highgrav_arid
			}
		}

		# 3 + 3 energy
		add_deposit = d_arid_highlands
		add_deposit = d_searing_desert
		add_deposit = d_geothermal_vent
		if = {
			limit = { 
				owner = { 
					is_machine_empire = yes 
				} 
			}
			add_deposit = d_searing_desert
		}

		# 3 + 3 mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_ore_rich_caverns
		add_deposit = d_rich_mountain

		# 4 + 3 farming
		add_deposit = d_bountiful_plains
		add_deposit = d_great_river
		if = {
			limit = { 
				owner = { 
					is_machine_empire = no 
				} 
			}
			add_deposit = d_bountiful_plains
			add_deposit = d_tropical_island
		}
	}

	if = {
		limit = {
			OR = {
				is_planet_class = pc_savannah
				is_planet_class = pc_dextro_savannah
				is_planet_class = pc_highgrav_savannah
				is_planet_class = pc_dextro_highgrav_savannah
			}
		}

		# 3 + 3 energy
		add_deposit = d_arid_highlands
		add_deposit = d_searing_desert
		add_deposit = d_geothermal_vent
		if = {
			limit = { 
				owner = { 
					is_machine_empire = yes 
				} 
			}
			add_deposit = d_searing_desert
		}

		# 3 + 3 mining
		add_deposit = d_mineral_fields
		add_deposit = d_prosperous_mesa
		add_deposit = d_submerged_ore_veins

		# 4 + 3 farming
		add_deposit = d_bountiful_plains
		add_deposit = d_fertile_lands
		if = {
			limit = { 
				owner = { 
					is_machine_empire = no 
				} 
			}
			add_deposit = d_bountiful_plains
			add_deposit = d_black_soil
		}
	}

	if = {
		limit = {
			OR = {
				is_planet_class = pc_swamp
				is_planet_class = pc_dextro_swamp
				is_planet_class = pc_highgrav_swamp
				is_planet_class = pc_dextro_highgrav_swamp
			}
		}

		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_rushing_waterfalls
		add_deposit = d_tempestous_mountain
		if = {
			limit = { 
				owner = { 
					is_machine_empire = yes 
				} 
			}
			add_deposit = d_rushing_waterfalls
		}

		# 3 + 3 mining
		add_deposit = d_mineral_fields
		add_deposit = d_prosperous_mesa
		add_deposit = d_submerged_ore_veins

		# 4 + 3 farming (lithoids swap 3 for minerals)
		add_deposit = d_green_hills
		add_deposit = d_lush_jungle

		random_list = {
				10 = { add_deposit = d_hydric_soil }
				10 = { add_deposit = d_organic_islands }
				10 = { add_deposit = d_disease_factory }
				10 = { add_deposit = d_rolling_mists }
				10 = { add_deposit = d_creeping_tendrils }
		}
		
		if = {
			limit = { 
				owner = { 
					is_machine_empire = no 
				} 
			}
				add_deposit = d_green_hills
				add_deposit = d_tropical_island
		}
	}

	if = {
		limit = {
			OR = {
				is_planet_class = pc_chlorine
				is_planet_class = pc_highgrav_chlorine
				is_planet_class = pc_ammonia
				is_planet_class = pc_highgrav_ammonia
				is_planet_class = pc_methane
				is_planet_class = pc_highgrav_methane
				is_planet_class = pc_mephitic
				is_planet_class = pc_highgrav_mephitic
				is_planet_class = pc_primal
				is_planet_class = pc_highgrav_primal
			}
		}

		# 3 + 3 energy
		add_deposit = d_hot_springs
		add_deposit = d_rushing_waterfalls
		add_deposit = d_tempestous_mountain
		if = {
			limit = { 
				owner = { 
					is_machine_empire = yes 
				} 
			}
			add_deposit = d_rushing_waterfalls
		}

		# 3 + 3 mining
		add_deposit = d_veiny_cliffs
		add_deposit = d_prosperous_mesa
		add_deposit = d_rich_mountain

		# 4 + 3 farming
		add_deposit = d_rugged_woods
		add_deposit = d_fertile_lands
		if = {
			limit = { 
				owner = { 
					is_machine_empire = no 
				} 
			}
			add_deposit = d_rugged_woods
			add_deposit = d_black_soil
		}
	}

	if = {
		limit = {
			is_planet_class = pc_relic
			owner = {
				has_origin = origin_remnants
				OR = {
					has_origin = origin_remnants
					has_origin = origin_slavers
				}
			}
		}

		set_planet_size = 22

		# 6 blockers
		add_deposit = d_ruined_arcology
		add_deposit = d_ruined_arcology
		add_deposit = d_ruined_arcology
		add_deposit = d_ruined_arcology
		add_deposit = d_ruined_arcology
		add_deposit = d_ruined_arcology

		# 3 + 3 energy
		add_deposit = d_arid_highlands
		add_deposit = d_searing_desert
		add_deposit = d_geothermal_vent
		if = {
			limit = { owner = { is_machine_empire = yes } }
			add_deposit = d_searing_desert
		}
		if = {
			limit = { owner = { has_valid_civic = civic_machine_servitor } }
			add_deposit = d_arid_highlands
		}

		# 3 + 3 mining
		add_deposit = d_mineral_fields
		add_deposit = d_prosperous_mesa
		add_deposit = d_submerged_ore_veins

		# 4 + 3 farming
		add_deposit = d_bountiful_plains
		add_deposit = d_fertile_lands
		if = {
			limit = { owner = { is_machine_empire = no } }
			add_deposit = d_bountiful_plains
			add_deposit = d_black_soil
		}
	}
}

generate_btr_start_buildings_and_districts = {
	optimize_memory
	if = {
		limit = {
			owner = {
				NOT = {
					is_country_type = primitive
				}
			}
		}
		if = {
			limit = {
				owner = {
					has_origin = asari_rep_origin
				}
			}
			generate_asr_thessia_capitol_buildings = yes			
		}
		if = {
			limit = {
				owner = {
					has_origin = salarian_uni_origin
				}
			}
			generate_sal_surkesh_capitol_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = turian_hier_origin
				}
			}
			generate_tur_palaven_capitol_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = systems_all_origin
				}
			}
			generate_sys_earth_capitol_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = courts_dek_origin
				}
			}
			generate_cod_dekuuna_capitol_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = vol_pro_origin
				}
			}
			generate_vol_irune_capitol_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = illuminated_pri_origin
				}
			}
			generate_han_kahje_capitol_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = hegemony_kha_origin
				}
			}
			generate_bat_kharshan_capitol_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = aralakh_kah_origin
				}
			}
			generate_kro_tuchanka_capitol_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = migrant_fle_origin
				}
			}
			generate_qua_rayya_capitol_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = cerberus_emp_origin
				}
			}
			generate_cer_cronos_capitol_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = omega_emp_origin
				}
			}
			generate_omega_building_and_districts = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = illium_cor_origin
				}
			}
			generate_illium_capitol_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = caleston_dir_origin
				}
			}
			generate_caleston_capitol_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = remnants_rak_origin
				}
			}
			generate_dre_rahkana_capitol_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = vorcha_cla_origin
				}
			}
			generate_vor_heshtok_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = sedriicae_col_origin
				}
			}
			generate_sed_sedriicae_capitol_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = lystheni_ord_origin
				}
			}
			generate_lys_sepkai_capitol_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = gothones_rem_origin
				}
			}
			generate_got_vindicta_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = cerberus_emp_origin
				}
			}
			generate_yah_parnack_capitol_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = cerberus_emp_origin
				}
			}
			generate_ral_turvess_capitol_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = cerberus_emp_origin
				}
			}
			generate_get_rannoch_capitol_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = disciples_naz_origin
				}
			}
			generate_naz_heretic_station_capitol_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = rachni_hiv_origin
				}
			}
			generate_rac_utukku_start_buildings = yes
		}
		if = {
			limit = {
				owner = {
					has_origin = collectors_emp_origin
				}
			}
			generate_collectors_capitol_buildings = yes
		}

		if = {
			limit = {
				owner = {
					NOT = {
						has_country_flag = citadel_council
					}
					is_country_type = independent_colony
				}
			}
			generate_btr_independent_world_capitol_buildings = yes
		}

		# Replace mining districts with uncapped ones for subterranean origin
		if = {
			limit = {
				owner = { is_subterranean_empire = yes }
			}
			while = {
				limit = { num_districts = { type = district_mining value > 0 } }
				remove_district = district_mining
				add_district_and_planet_size_if_needed_effect = {
					district = district_mining_uncapped
				}
			}
		}
	}
}

generate_btr_start_pops = {
	optimize_memory
	if = {
		limit = { 
			owner = { 
				has_origin = asari_rep_origin 
			} 
		}
		while = {
			limit = { num_pops < 52 }
			create_pop = {
				species = owner_main_species
				ethos = owner
			}
			set_species_homeworld = event_target:asariHomeworld
		}
		last_created_species = {
			save_global_event_target_as = asariSpecies
		}
		event_target:asariSpecies = { log = "asariSpecies = [This.GetName]" }
	}
	if = {
		limit = { 
			owner = { 
				has_origin = salarian_uni_origin 
			} 
		}
		while = {
			limit = { num_pops < 59 }
			create_pop = {
				species = owner_main_species
				ethos = owner
			}
		}
		last_created_species = {
			save_global_event_target_as = salarianSpecies
			event_target:salarianSpecies = { log = "salarianSpecies = [This.GetName]" }
		}
	}
	if = {
		limit = { 
			owner = { 
				has_origin = turian_hier_origin 
			} 
		}
		while = {
			limit = { num_pops < 42 }
			create_pop = {
				species = owner_main_species
				ethos = owner
			}
		}
		last_created_species = {
			save_global_event_target_as = turianSpecies
			event_target:turianSpecies = { log = "turianSpecies = [This.GetName]" }
		}
	}
	if = {
		limit = { 
			owner = { 
				has_origin = systems_all_origin 
			} 
		}
		while = {
			limit = { num_pops < 59 }
			create_pop = {
				species = owner_main_species
				ethos = owner
			}
		}
		last_created_species = {
			save_global_event_target_as = humanSpecies
			event_target:humanSpecies = { log = "humanSpecies = [This.GetName]" }
		}
	}
	if = {
		limit = { 
			owner = { 
				has_origin = courts_dek_origin 
			} 
		}
		while = {
			limit = { num_pops < 25 }
			create_pop = {
				species = owner_main_species
				ethos = owner
			}
		}
		last_created_species = {
			save_global_event_target_as = elcorSpecies
			event_target:elcorSpecies = { log = "elcorSpecies = [This.GetName]" }
		}
	}
	if = {
		limit = { 
			owner = { 
				has_origin = vol_pro_origin 
			} 
		}
		while = {
			limit = { num_pops < 31 }
			create_pop = {
				species = owner_main_species
				ethos = owner
			}
		}
		last_created_species = {
			save_global_event_target_as = volusSpecies
			event_target:volusSpecies = { log = "volusSpecies = [This.GetName]" }
		}
	}
	if = {
		limit = { 
			owner = { 
				has_origin = illuminated_pri_origin 
			} 
		}
		while = {
			limit = { num_pops < 59 }
			create_pop = {
				species = owner_main_species
				ethos = owner
			}
		}
		last_created_species = {
			save_global_event_target_as = hanarSpecies
			event_target:hanarSpecies = { log = "hanarSpecies = [This.GetName]" }
		}
	}
	if = {
		limit = { 
			owner = { 
				has_origin = hegemony_kha_origin 
			} 
		}
		while = {
			limit = { num_pops < 59 }
			create_pop = {
				species = owner_main_species
				ethos = owner
			}
		}
		last_created_species = {
			save_global_event_target_as = batarianSpecies
			event_target:batarianSpecies = { log = "batarianSpecies = [This.GetName]" }
		}
	}
	if = {
		limit = { 
			owner = { 
				has_origin = aralakh_kah_origin 
			} 
		}
		while = {
			limit = { num_pops < 59 }
			create_pop = {
				species = owner_main_species
				ethos = owner
			}
		}
		last_created_species = {
			save_global_event_target_as = kroganSpecies
			event_target:kroganSpecies = { log = "kroganSpecies = [This.GetName]" }
		}
	}
	if = {
		limit = { 
			owner = { 
				has_origin = migrant_fle_origin 
			} 
		}
		while = {
			limit = { num_pops < 59 }
			create_pop = {
				species = owner_main_species
				ethos = owner
			}
		}
		last_created_species = {
			save_global_event_target_as = quarianSpecies
			event_target:quarianSpecies = { log = "quarianSpecies = [This.GetName]" }
		}
	}
	if = {
		limit = { 
			owner = { 
				has_origin = remnants_rak_origin 
			} 
		}
		while = {
			limit = { num_pops < 8 }
			create_pop = {
				species = owner_main_species
				ethos = owner
			}
		}
		last_created_species = {
			save_global_event_target_as = drellSpecies
			event_target:drellSpecies = { log = "drellSpecies = [This.GetName]" }
		}
	}
	if = {
		limit = { 
			owner = { 
				has_origin = vorcha_cla_origin 
			} 
		}
		while = {
			limit = { num_pops < 31 }
			create_pop = {
				species = owner_main_species
				ethos = owner
			}
		}
		last_created_species = {
			save_global_event_target_as = vorchaSpecies
			event_target:vorchaSpecies = { log = "vorchaSpecies = [This.GetName]" }
		}
	}
	if = {
		limit = { 
			owner = { 
				has_origin = sedriicae_col_origin 
			} 
		}
		while = {
			limit = { num_pops < 31 }
			create_pop = {
				species = owner_main_species
				ethos = owner
			}
		}
		last_created_species = {
			save_global_event_target_as = forayanSpecies
			event_target:forayanSpecies = { log = "forayanSpecies = [This.GetName]" }
		}
	}
	if = {
		limit = { 
			owner = { 
				has_origin = lystheni_ord_origin 
			} 
		}
		while = {
			limit = { num_pops < 26 }
			create_pop = {
				species = owner_main_species
				ethos = owner
			}
		}
		last_created_species = {
			save_global_event_target_as = lystheniSpecies
			event_target:lystheniSpecies = { log = "lystheniSpecies = [This.GetName]" }
		}
	}
	if = {
		limit = { 
			owner = { 
				has_origin = gothones_rem_origin 
			} 
		}
		while = {
			limit = { num_pops < 26 }
			create_pop = {
				species = owner_main_species
				ethos = owner
			}
		}
		last_created_species = {
			save_global_event_target_as = gothonesSpecies
			event_target:gothonesSpecies = { log = "gothonesSpecies = [This.GetName]" }
		}
	}
	if = {
		limit = { 
			owner = { 
				has_origin = parnack_reg_origin 
			} 
		}
		while = {
			limit = { num_pops < 28 }
			create_pop = {
				species = owner_main_species
				ethos = owner
			}
		}
		last_created_species = {
			save_global_event_target_as = yahgSpecies
			event_target:yahgSpecies = { log = "yahgSpecies = [This.GetName]" }
		}
	}
	if = {
		limit = { 
			owner = { 
				has_origin = raloi_rep_origin 
			} 
		}
		while = {
			limit = { num_pops < 28 }
			create_pop = {
				species = owner_main_species
				ethos = owner
			}
		}
		last_created_species = {
			save_global_event_target_as = raloiSpecies
			event_target:raloiSpecies = { log = "raloiSpecies = [This.GetName]" }
		}
	}
	if = {
		limit = { 
			owner = { 
				has_origin = geth_con_origin 
			} 
		}
		while = {
			limit = { num_pops < 59 }
			create_pop = {
				species = owner_main_species
				ethos = owner
			}
		}
		last_created_species = {
			save_global_event_target_as = gethSpecies
			event_target:gethSpecies = { log = "gethSpecies = [This.GetName]" }
		}
	}
	if = {
		limit = { 
			owner = { 
				has_origin = rachni_hiv_origin 
			} 
		}
		while = {
			limit = { num_pops < 59 }
			create_pop = {
				species = owner_main_species
				ethos = owner
			}
		}
		last_created_species = {
			save_global_event_target_as = rachniSpecies
			event_target:rachniSpecies = { log = "rachniSpecies = [This.GetName]" }
		}
	}
	if = {
		limit = { 
			owner = { 
				has_origin = collectors_emp_origin 
			} 
		}
		while = {
			limit = { num_pops < 59 }
			create_pop = {
				species = owner_main_species
				ethos = owner
			}
		}
		last_created_species = {
			save_global_event_target_as = collectorsSpecies
			event_target:collectorsSpecies = { log = "collectorsSpecies = [This.GetName]" }
		}
	}






	if = {
		limit = { owner = { has_valid_civic = civic_machine_servitor } }
		while = {
			limit = { num_pops < 33 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = { owner = { is_machine_empire = yes } }
		while = {
			limit = { num_pops < 29 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				is_megacorp = yes
				has_reduced_pop_origin = no
			}
		}
		while = {
			limit = { num_pops < 28 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_broken_shackles }
			num_pops < 6
		}

		while = {
			limit = { num_pops < 6 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				is_regular_empire = yes
				has_reduced_pop_origin = no
			}
		}
		while = {
			limit = { num_pops < 28 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_payback }
			num_pops < 18
		}
		while = {
			limit = { num_pops < 18 }
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_fear_of_the_dark }
		}
		while = {
			count = 20
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = { #homicidal necrophages lose 1/4 of their necrophytes to fleeing
			owner = {
				has_origin = origin_necrophage
				is_homicidal = yes
			}
		}
		while = {
			count = 2
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_default }
		}
		while = {
			count = 4
			create_pop = {
				species = owner_main_species
				ethos = random
			}
		}
	}
	if = {
		limit = {
			owner = {
				is_eager_explorer_empire = yes
			}
		}
		while = {
			count = 10
			random_owned_pop = {
				limit = {
					is_same_species = root.owner.species
				}
				kill_pop = yes
			}
		}
	}
	if = {
		limit = {
			owner = {
				has_civic = civic_permanent_employment
			}
		}
		while = {
			count = 4
			random_owned_pop = {
				limit = {
					OR = {
						has_job = clerk
						has_job = technician
						has_job = miner
						has_job = farmer
					}
					is_robotic_species = no
				}
				modify_species = {
					species = this
					add_trait = trait_zombie
					add_traits_at_start_of_list = yes
				}
				if = {
					limit = {
						has_trait = trait_syncretic_proles
					}
					modify_species = {
						species = this
						remove_trait = trait_syncretic_proles
					}
				}
			}
		}
	}
}
###########################
###
### 
### 
###########################

namespace = btr_start_country

#####################
# MASTER START EVENTS
#####################
event = {
	id = btr_start_country.1
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_global_flag = has_beyond_the_relays
		log = "Playing Beyond the Relays"
		random_country = { limit = { is_country_type = default } country_event = { id = btr_start_global.5 days = 1 } } #Set Start Flag
		every_country = {
			limit = { is_btr_empire = yes }
			country_event = { id = btr_start_country.2 days = 0 } #Country Starting Setups
			country_event = { id = btr_start_country.14 days = 0 } #Set Species Rights and Slavery
			country_event = { id = btr_start_country.19 days = 0 } #Set Start Techs
			country_event = { id = btr_start_country.9 days = 0 } #Set Capital Buildings TODO:Add Colony Buildings for canon
			#country_event = { id = btr_start_country.11 days = 0 } #Create Independent Colonies
			country_event = { id = btr_start_country.12 days = 0 } #Set Empire Starting Territory
			#planet_event = { id = btr_start_country.13 days = 0 } #Set Empire Starting Colonies
			country_event = { id = btr_start_country.14 days = 0 } #Set Empire Starting Colony Pops
			#country_event = { id = btr_start_country.18 days = 1 } #Set Country Policies - TODO: Have Team review Empires to determine policies at game start.

			country_event = { id = btr_start_country.20 days = 1 } #Set Homeworld surveyed and clear borders of hostiles
			country_event = { id = btr_start_country.22 days = 0 } #Pregame Genocide
			#country_event = { id = btr_start_country.24 } TODO: Have team finalize list of starting relics - Asari beacon, earth mars archives, etc.
			country_event = { id = btr_start_country.26 days = 0 } #Set Starting Ships
			country_event = { id = btr_start_country.28 days = 0 } #Mining and Research Stations
		}
	}
}

country_event = {
	id = btr_start_country.2
	hide_window = yes
	is_triggered_only = yes
	trigger = {	}
	immediate = {

		log = "btr_start_country.2"
		# PRIMARY EMPIRES
		random_country = { limit = { has_country_flag = asari_republics } save_global_event_target_as = asari_republics }
		random_country = { limit = { has_country_flag = salarian_union } save_global_event_target_as = salarian_union }
		random_country = { limit = { has_country_flag = turian_hierarchy } save_global_event_target_as = turian_hierarchy }
		random_country = { limit = { has_country_flag = systems_alliance } save_global_event_target_as = systems_alliance }
		random_country = { limit = { has_country_flag = courts_of_dekuuna } save_global_event_target_as = courts_of_dekuuna }
		random_country = { limit = { has_country_flag = illuminated_primacy } save_global_event_target_as = illuminated_primacy }
		random_country = { limit = { has_country_flag = hegemony_of_kharshan } save_global_event_target_as = hegemony_of_kharshan }
		random_country = { limit = { has_country_flag = aralakh_kahmat } save_global_event_target_as = aralakh_kahmat }
		random_country = { limit = { has_country_flag = migrant_fleet } save_global_event_target_as = migrant_fleet }
		random_country = { limit = { has_country_flag = cerberus_empire } save_global_event_target_as = cerberus_empire }
		random_country = { limit = { has_country_flag = omega_empire } save_global_event_target_as = omega_empire }
		random_country = { limit = { has_country_flag = illium_corporate_interests } save_global_event_target_as = illium_corporate_interests }
		random_country = { limit = { has_country_flag = caleston_directorate } save_global_event_target_as = caleston_directorate }
		random_country = { limit = { has_country_flag = remnants_of_rakhana } save_global_event_target_as = remnants_of_rakhana }
		random_country = { limit = { has_country_flag = vorcha_clandom } save_global_event_target_as = vorcha_clandom }
		random_country = { limit = { has_country_flag = sedriicae_collective } save_global_event_target_as = sedriicae_collective }
		random_country = { limit = { has_country_flag = lystheni_order } save_global_event_target_as = lystheni_order }
		random_country = { limit = { has_country_flag = gothones_remnant } save_global_event_target_as = gothones_remnant }
		random_country = { limit = { has_country_flag = parnack_regime } save_global_event_target_as = parnack_regime }
		random_country = { limit = { has_country_flag = raloi_republic } save_global_event_target_as = raloi_republic }
		random_country = { limit = { has_country_flag = geth_consensus } save_global_event_target_as = geth_consensus }
		random_country = { limit = { has_country_flag = disciples_of_nazara } save_global_event_target_as = disciples_of_nazara }
		random_country = { limit = { has_country_flag = rachni_hive } save_global_event_target_as = rachni_hive }
		random_country = { limit = { has_country_flag = collectors_empire } save_global_event_target_as = collectors_empire }
		# INDEPENDENT WORLDS
		random_country = { limit = { has_country_flag = citadel_council } save_global_event_target_as = citadel_council }
		random_country = { limit = { has_country_flag = aite_warring_states } save_global_event_target_as = aite_warring_states }
		random_country = { limit = { has_country_flag = alahyan_terraformation_zone } save_global_event_target_as = alahyan_terraformation_zone }
		random_country = { limit = { has_country_flag = altai_mineral_works } save_global_event_target_as = altai_mineral_works }
		random_country = { limit = { has_country_flag = altakiril_union } save_global_event_target_as = altakiril_union }
		random_country = { limit = { has_country_flag = arvunan_administration } save_global_event_target_as = arvunan_administration }
		random_country = { limit = { has_country_flag = authority_of_new_canton } save_global_event_target_as = authority_of_new_canton }
		random_country = { limit = { has_country_flag = autonomy_cyrene } save_global_event_target_as = autonomy_cyrene }
		random_country = { limit = { has_country_flag = chalkhos_freehold } save_global_event_target_as = chalkhos_freehold }
		random_country = { limit = { has_country_flag = commune_of_horizon } save_global_event_target_as = commune_of_horizon }
		random_country = { limit = { has_country_flag = commonwealth_of_joab } save_global_event_target_as = commonwealth_of_joab }
		random_country = { limit = { has_country_flag = confederation_of_thunawanuro } save_global_event_target_as = confederation_of_thunawanuro }
		random_country = { limit = { has_country_flag = fal_iii_manufactory } save_global_event_target_as = fal_iii_manufactory }
		random_country = { limit = { has_country_flag = flett_transport_union } save_global_event_target_as = flett_transport_union }
		random_country = { limit = { has_country_flag = freehold_of_freedoms_progress } save_global_event_target_as = freehold_of_freedoms_progress }
		random_country = { limit = { has_country_flag = free_port_of_tortuga } save_global_event_target_as = free_port_of_tortuga }
		random_country = { limit = { has_country_flag = ishtar_emporium } save_global_event_target_as = ishtar_emporium }
		random_country = { limit = { has_country_flag = jenera_corporation } save_global_event_target_as = jenera_corporation }
		random_country = { limit = { has_country_flag = korlus_recycling_union } save_global_event_target_as = korlus_recycling_union }
		random_country = { limit = { has_country_flag = kosh_development_corporation } save_global_event_target_as = kosh_development_corporation }
		random_country = { limit = { has_country_flag = league_of_sahi_dau } save_global_event_target_as = league_of_sahi_dau }
		random_country = { limit = { has_country_flag = logarisi_development_corporation } save_global_event_target_as = logarisi_development_corporation }
		random_country = { limit = { has_country_flag = monrini_syndicate } save_global_event_target_as = monrini_syndicate }
		random_country = { limit = { has_country_flag = noveria_development_corporation } save_global_event_target_as = noveria_development_corporation }
		random_country = { limit = { has_country_flag = peoples_authority_of_tyvor } save_global_event_target_as = peoples_authority_of_tyvor }
		random_country = { limit = { has_country_flag = polity_of_anhur } save_global_event_target_as = polity_of_anhur }
		random_country = { limit = { has_country_flag = relic_mineral_works } save_global_event_target_as = relic_mineral_works }
		random_country = { limit = { has_country_flag = republic_of_asteria } save_global_event_target_as = republic_of_asteria }
		random_country = { limit = { has_country_flag = sanctum_metals_group } save_global_event_target_as = sanctum_metals_group }
		random_country = { limit = { has_country_flag = state_of_garvug } save_global_event_target_as = state_of_garvug }
		random_country = { limit = { has_country_flag = thalassocracy_of_talis_fia } save_global_event_target_as = thalassocracy_of_talis_fia }
		random_country = { limit = { has_country_flag = thrednakka_autonomy } save_global_event_target_as = thrednakka_autonomy }
		random_country = { limit = { has_country_flag = trident_exports_limited } save_global_event_target_as = trident_exports_limited }
		random_country = { limit = { has_country_flag = trigintan_league } save_global_event_target_as = trigintan_league }
		random_country = { limit = { has_country_flag = union_of_ferris_fields } save_global_event_target_as = union_of_ferris_fields }
		random_country = { limit = { has_country_flag = wrill_mining_consortium } save_global_event_target_as = wrill_mining_consortium }
		random_country = { limit = { has_country_flag = yamm_trade_zone } save_global_event_target_as = yamm_trade_zone }
		random_country = { limit = { has_country_flag = zoryan_sovereignty } save_global_event_target_as = zoryan_sovereignty }

		if = {
			limit = {
				is_btr_canon_map = yes
			}
			log = "btr_start_country.10 - CANON MAP SETUP"
			establish_asari_republics_communication = yes
			establish_salarian_union_communication = yes
			establish_turian_hierarchy_communication = yes
			establish_systems_alliance_communication = yes
			establish_courts_of_dekuuna_communication = yes
			establish_vol_protectorate_communication = yes
			establish_illuminated_primacy_communication = yes
			establish_hegemony_of_kharshan_communication = yes
			establish_aralakh_kahmat_communication = yes
			establish_omega_communication = yes
			establish_illium_corporate_interests_communication = yes
			establish_caleston_directorate_communication = yes
			establish_remnants_of_rakhana_communication = yes
			establish_vorcha_clandom_communication = yes
			establish_sedriicae_collective_communication = yes
			establish_lystheni_order_communication = yes
			establish_gothones_remnant_communication = yes
			establish_geth_consensus_communication = yes
			establish_disciples_of_nazara_communication = yes
			establish_citadel_council_communication = yes
			establish_citadel_council_communication = yes
			establish_aite_warring_states_communications = yes
			establish_alahyan_terraformation_zone_communications = yes
			establish_altai_mineral_works_communications = yes
			establish_altakiril_union_communications = yes
			establish_anansi_manufacturing_communications = yes
			establish_polity_of_anhur_communications = yes
			establish_arvunan_administration_communications = yes
			establish_republic_of_asteria_communications = yes
			establish_chalkos_freehold_communications = yes
			establish_autonomy_of_cyrene_communications = yes
			establish_erinle_conservancy_communications = yes
			establish_union_of_ferris_fields_communications = yes
			establish_relic_mineral_works_communications = yes
			establish_flett_transort_union_communications = yes
			establish_freehold_of_freedoms_progress_communications = yes
			establish_state_of_garvug_communications = yes
			establish_ishtar_emporium_communications = yes
			establish_jenera_corporation_communications = yes
			establish_commonwealth_of_joab_communications = yes
			establish_korlus_recycling_union_communications = yes
			establish_kosh_development_corporation_communications = yes
			establish_logarisi_development_corporation_communications = yes
			establish_monrini_syndicate_communications = yes
			establish_authority_of_new_canton_communications = yes
			establish_noveria_development_corporation_communications = yes
			establish_league_of_sahi_dau_communications = yes
			establish_sanctum_metals_group_communications = yes
			establish_thalassocracy_of_talis_fia_communications = yes
			establish_thrednakka_autonomy_communications = yes
			establish_confederation_of_thunawanuro_communications = yes
			establish_free_port_of_tortuga_communications = yes
			establish_trident_exports_communications = yes
			establish_trigintan_league_communications = yes
			establish_peoples_authority_of_tyvor_communications = yes
			establish_wrill_mining_consortium_communications = yes
			establish_fal_III_manufactory_communications = yes
			establish_yamm_free_trade_zone_communications = yes
			establish_zoryan_sovereignty_communications = yes
		}
		if = {
			limit = {
				any_relation = {
					OR = {
						is_country_type = default
						is_country_type = planet_state
					}
				}
			}
			set_country_flag = has_encountered_other_empire
		}
	}
}











country_event = {
	id = btr_start_country.9
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		log = "btr_start_country.9"
		if = {
			limit = { 
				is_btr_canon_map = yes
			}
			every_owned_planet = {
				limit = {
					is_capital = yes
				}
				generate_btr_canon_capital_buildings_and_districts = yes
			}
		}
		# if = {
		# 	limit = { 
		# 		is_btr_sandbox_map = yes
		# 	}
		# 	every_owned_planet = {
		# 		limit = {
		# 			is_capital = yes
		# 		}
		# 		generate_btr_sandbox_capital_buildings_and_districts = yes
		# 	}
		# }
	}
}










country_event = {
	id = btr_start_country.11
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					is_btr_non_sandbox_map = yes
					is_btr_sandbox_map = yes
				}
			}
			#Citadel Council
			random_system = {
				limit = { has_star_flag = widow_system }
				generate_citadel_council_country = yes
				random_country = {
					limit = {
						has_country_flag = citadel_council
					}
					save_global_event_target_as = citadel_council
				}
				#event_target:citadel_council = { country_event = { id = btr_start_country.3 days = 1 } }
				log = "[event_target:citadel_council.GetName]"
			}

			#Aite Warring States
			random_system = {
				limit = { has_star_flag = typhon_system }
				generate_aite_warring_states_country = yes
				random_country = {
					limit = {
						has_country_flag = aite_warring_states
					}
					save_global_event_target_as = aite_warring_states
				}
				#event_target:aite_warring_states = { country_event = { id = btr_start_country.5 days = 1 } }
				log = "[event_target:aite_warring_states.GetName]"
			}

			#Alahyan Terraformation Zone
			random_system = {
				limit = { has_star_flag = aysur_system }
				generate_alahyan_terraformation_zone_country = yes
				random_country = {
					limit = {
						has_country_flag = alahyan_terraformation_zone
					}
					save_global_event_target_as = alahyan_terraformation_zone
				}
				#event_target:alahyan_terraformation_zone = { country_event = { id = btr_start_country.3 days = 1 } }
				log = "[event_target:alahyan_terraformation_zone.GetName]"
			}

			#Altai Mineral Works
			random_system = {
				limit = { has_star_flag = pamyat_system }
				generate_altai_mineral_works_country = yes
				random_country = {
					limit = {
						has_country_flag = altai_mineral_works
					}
					save_global_event_target_as = altai_mineral_works
				}
				#event_target:altai_mineral_works = { country_event = { id = btr_start_country.3 days = 1 } }
				log = "[event_target:altai_mineral_works.GetName]"
			}

			#Altakiril Union
			random_system = {
				limit = { has_star_flag = thal_system }
				generate_altakiril_union_country = yes
				random_country = {
					limit = {
						has_country_flag = altakiril_union
					}
					save_global_event_target_as = altakiril_union
				}
				#event_target:altakiril_union = { country_event = { id = btr_start_country.3 days = 1 } }
				log = "[event_target:altakiril_union.GetName]"
			}

			#Anansi Manufacturing
			random_system = {
				limit = { has_star_flag = cavalcante_system }
				generate_anansi_manufacturing_country = yes
				random_country = {
					limit = {
						has_country_flag = anansi_manufacturing
					}
					save_global_event_target_as = anansi_manufacturing
				}
				log = "[event_target:anansi_manufacturing.GetName]"
			}

			#Arvunan Administration
			random_system = {
				limit = { has_star_flag = aysur_system }
				generate_arvunan_administration_country = yes
				random_country = {
					limit = {
						has_country_flag = arvunan_administration
					}
					save_global_event_target_as = arvunan_administration
				}
				log = "[event_target:arvunan_administration.GetName]"
			}

			#Authority of New Canton
			random_system = {
				limit = { has_star_flag = razhek_system }
				generate_authority_of_new_canton_country = yes
				random_country = {
					limit = {
						has_country_flag = authority_of_new_canton
					}
					save_global_event_target_as = authority_of_new_canton
				}
				log = "[event_target:authority_of_new_canton.GetName]"
			}

			#Autonomy of Cyrene
			random_system = {
				limit = { has_star_flag = tkachyov_system }
				generate_autonomy_of_cyrene_country = yes
				random_country = {
					limit = {
						has_country_flag = autonomy_cyrene
					}
					save_global_event_target_as = autonomy_cyrene
				}
				log = "[event_target:autonomy_cyrene.GetName]"
			}

			#Altakiril Union
			random_system = {
				limit = { has_star_flag = mil_system }
				generate_chalkos_freehold_country = yes
				random_country = {
					limit = {
						has_country_flag = chalkhos_freehold
					}
					save_global_event_target_as = chalkhos_freehold
				}
				#event_target:altakiril_union = { country_event = { id = btr_start_country.3 days = 1 } }
				log = "[event_target:chalkhos_freehold.GetName]"
			}

			#Commune of Horizon
			random_system = {
				limit = { has_star_flag = iera_system }
				generate_commune_of_horizon_country = yes
				random_country = {
					limit = {
						has_country_flag = commune_of_horizon
					}
					save_global_event_target_as = commune_of_horizon
				}
				#event_target:commune_of_horizon = { country_event = { id = btr_start_country.3 days = 1 } }
				log = "[event_target:commune_of_horizon.GetName]"
			}

			#Commonwealth of Joab
			random_system = {
				limit = { has_star_flag = enoch_system }
				generate_commonwealth_of_joab_country = yes
				random_country = {
					limit = {
						has_country_flag = commonwealth_of_joab
					}
					save_global_event_target_as = commonwealth_of_joab
				}
				#event_target:commonwealth_of_joab = { country_event = { id = btr_start_country.3 days = 1 } }
				log = "[event_target:commonwealth_of_joab.GetName]"
			}

			#Confederation of Thunawanuro
			random_system = {
				limit = { has_star_flag = batalla_system }
				generate_confederation_of_thunawanuro_country = yes
				random_country = {
					limit = {
						has_country_flag = confederation_of_thunawanuro
					}
					save_global_event_target_as = confederation_of_thunawanuro
				}
				log = "[event_target:confederation_of_thunawanuro.GetName]"
			}

			#Confederation of Thunawanuro
			random_system = {
				limit = { has_star_flag = osun_system }
				generate_erinle_conservancy_country = yes
				random_country = {
					limit = {
						has_country_flag = erinle_conservancy
					}
					save_global_event_target_as = erinle_conservancy
				}
				log = "[event_target:erinle_conservancy.GetName]"
			}

			#Fal III Manufactory
			random_system = {
				limit = { has_star_flag = fal_system }
				generate_fal_III_manufactory_country = yes
				random_country = {
					limit = {
						has_country_flag = fal_iii_manufactory
					}
					save_global_event_target_as = fal_iii_manufactory
				}
				#event_target:fal_iii_manufactory = { country_event = { id = btr_start_country.4 days = 1 } }
				log = "[event_target:fal_iii_manufactory.GetName]"
			}

			#Flett Transport Union
			random_system = {
				limit = { has_star_flag = malgus_system }
				generate_flett_transport_union_country = yes
				random_country = {
					limit = {
						has_country_flag = flett_transport_union
					}
					save_global_event_target_as = flett_transport_union
				}
				#event_target:flett_transport_union = { country_event = { id = btr_start_country.5 days = 1 } }
				log = "[event_target:flett_transport_union.GetName]"
			}

			#Freehold of Freedom's Progress
			random_system = {
				limit = { has_star_flag = tydeous_system }
				generate_freehold_of_freedoms_progress_country = yes
				random_country = {
					limit = {
						has_country_flag = freehold_of_freedoms_progress
					}
					save_global_event_target_as = freehold_of_freedoms_progress
				}
				log = "[event_target:freehold_of_freedoms_progress.GetName]"
			}

			#Flett Transport Union
			random_system = {
				limit = { has_star_flag = olonnais_system }
				generate_free_port_of_tortuga_country = yes
				random_country = {
					limit = {
						has_country_flag = free_port_of_tortuga
					}
					save_global_event_target_as = free_port_of_tortuga
				}
				#event_target:free_port_of_tortuga = { country_event = { id = btr_start_country.5 days = 1 } }
				log = "[event_target:free_port_of_tortuga.GetName]"
			}

			#Ishtar Emporium
			random_system = {
				limit = { has_star_flag = crete_system }
				generate_ishtar_emporium_country = yes
				random_country = {
					limit = {
						has_country_flag = ishtar_emporium
					}
					save_global_event_target_as = ishtar_emporium
				}
				log = "[event_target:ishtar_emporium.GetName]"
			}

			#Jenera Corporation
			random_system = {
				limit = { has_star_flag = cheng_system }
				generate_jenera_corporation_country = yes
				random_country = {
					limit = {
						has_country_flag = jenera_corporation
					}
					save_global_event_target_as = jenera_corporation
				}
				#event_target:jenera_corporation = { country_event = { id = btr_start_country.4 days = 1 } }
				log = "[event_target:jenera_corporation.GetName]"
			}

			#Korlus Recycling Union
			random_system = {
				limit = { has_star_flag = imir_system }
				generate_korlus_recycling_union_country = yes
				random_country = {
					limit = {
						has_country_flag = korlus_recycling_union
					}
					save_global_event_target_as = korlus_recycling_union
				}
				#event_target:korlus_recycling_union = { country_event = { id = btr_start_country.4 days = 1 } }
				log = "[event_target:korlus_recycling_union.GetName]"
			}

			#Kosh Development Corporation
			random_system = {
				limit = { has_star_flag = webel_system }
				generate_kosh_development_corporation_country = yes
				random_country = {
					limit = {
						has_country_flag = kosh_development_corporation
					}
					save_global_event_target_as = kosh_development_corporation
				}
				log = "[event_target:kosh_development_corporation.GetName]"
			}

			#League of Sahi Dau
			random_system = {
				limit = { has_star_flag = essul_system }
				generate_league_of_sahi_dau_country = yes
				random_country = {
					limit = {
						has_country_flag = league_of_sahi_dau
					}
					save_global_event_target_as = league_of_sahi_dau
				}
				#event_target:league_of_sahi_dau = { country_event = { id = btr_start_country.3 days = 1 } }
				log = "[event_target:league_of_sahi_dau.GetName]"
			}

			#Logarisi Development Corporation
			random_system = {
				limit = { has_star_flag = batalla_system }
				generate_logarisi_development_corporation_country = yes
				random_country = {
					limit = {
						has_country_flag = logarisi_development_corporation
					}
					save_global_event_target_as = logarisi_development_corporation
				}
				#event_target:logarisi_development_corporation = { country_event = { id = btr_start_country.4 days = 1 } }
				log = "[event_target:logarisi_development_corporation.GetName]"
			}

			#Monrini Syndicate
			random_system = {
				limit = { has_star_flag = adiratna_system }
				generate_monrini_syndicate_country = yes
				random_country = {
					limit = {
						has_country_flag = monrini_syndicate
					}
					save_global_event_target_as = monrini_syndicate
				}
				log = "[event_target:monrini_syndicate.GetName]"
			}

			#Noveria Development Corporation
			random_system = {
				limit = { has_star_flag = pax_system }
				generate_noveria_development_corporation_country = yes
				random_country = {
					limit = {
						has_country_flag = noveria_development_corporation
					}
					save_global_event_target_as = noveria_development_corporation
				}
				#event_target:noveria_development_corporation = { country_event = { id = btr_start_country.3 days = 1 } }
				log = "[event_target:noveria_development_corporation.GetName]"
			}

			#People's Authority of Tyvor
			random_system = {
				limit = { has_star_flag = agnes_system }
				generate_peoples_authority_of_tyvor_country = yes
				random_country = {
					limit = {
						has_country_flag = peoples_authority_of_tyvor
					}
					save_global_event_target_as = peoples_authority_of_tyvor
				}
				#event_target:peoples_authority_of_tyvor = { country_event = { id = btr_start_country.4 days = 1 } }
				log = "[event_target:peoples_authority_of_tyvor.GetName]"
			}

			#Polity of Anhur
			random_system = {
				limit = { has_star_flag = amun_system }
				generate_polity_of_anhur_country = yes
				random_country = {
					limit = {
						has_country_flag = polity_of_anhur
					}
					save_global_event_target_as = polity_of_anhur
				}
				#event_target:polity_of_anhur = { country_event = { id = btr_start_country.4 days = 1 } }
				log = "[event_target:polity_of_anhur.GetName]"
			}

			#Relic Mineral Works
			random_system = {
				limit = { has_star_flag = relic_system }
				generate_relic_mineral_works_country = yes
				random_country = {
					limit = {
						has_country_flag = relic_mineral_works
					}
					save_global_event_target_as = relic_mineral_works
				}
				#event_target:relic_mineral_works = { country_event = { id = btr_start_country.3 days = 1 } }
				log = "[event_target:relic_mineral_works.GetName]"
			}

			#Republic of Asteria
			random_system = {
				limit = { has_star_flag = hekate_system }
				generate_republic_of_asteria_country = yes
				random_country = {
					limit = {
						has_country_flag = republic_of_asteria
					}
					save_global_event_target_as = republic_of_asteria
				}
				log = "[event_target:republic_of_asteria.GetName]"
			}

			#Sanctum Metals Group
			random_system = {
				limit = { has_star_flag = decoris_system }
				generate_sanctum_metals_group_country = yes
				random_country = {
					limit = {
						has_country_flag = sanctum_metals_group
					}
					save_global_event_target_as = sanctum_metals_group
				}
				#event_target:sanctum_metals_group = { country_event = { id = btr_start_country.5 days = 1 } }
				log = "[event_target:sanctum_metals_group.GetName]"
			}

			#State of Garvug
			random_system = {
				limit = { has_star_flag = paz_system }
				generate_state_of_garvug_country = yes
				random_country = {
					limit = {
						has_country_flag = state_of_garvug
					}
					save_global_event_target_as = state_of_garvug
				}
			#	event_target:state_of_garvug = { country_event = { id = btr_start_country.5 days = 1 } }
				log = "[event_target:state_of_garvug.GetName]"
			}

			#Thalassocracy of Talis Fia
			random_system = {
				limit = { has_star_flag = urlalast_system }
				generate_thalassocracy_of_talis_fia_country = yes
				random_country = {
					limit = {
						has_country_flag = thalassocracy_of_talis_fia
					}
					save_global_event_target_as = thalassocracy_of_talis_fia
				}
				log = "[event_target:thalassocracy_of_talis_fia.GetName]"
			}

			#Thred'nakka Autonomy
			random_system = {
				limit = { has_star_flag = brikhaun_system }
				generate_thrednakka_autonomy_country = yes
				random_country = {
					limit = {
						has_country_flag = thrednakka_autonomy
					}
					save_global_event_target_as = thrednakka_autonomy
				}
			#	event_target:thrednakka_autonomy = { country_event = { id = btr_start_country.5 days = 1 } }
				log = "[event_target:thrednakka_autonomy.GetName]"
			}

			#Trident Exports Limited
			random_system = {
				limit = { has_star_flag = hoplos_system }
				generate_trident_exports_limited_country = yes
				random_country = {
					limit = {
						has_country_flag = trident_exports_limited
					}
					save_global_event_target_as = trident_exports_limited
				}
				log = "[event_target:trident_exports_limited.GetName]"
			}

			#Union of Ferris Fields
			random_system = {
				limit = { has_star_flag = jintanei_system }
				generate_union_of_ferris_fields_country = yes
				random_country = {
					limit = {
						has_country_flag = union_of_ferris_fields
					}
					save_global_event_target_as = union_of_ferris_fields
				}
				log = "[event_target:union_of_ferris_fields.GetName]"
			}

			#Wrill Mining Consortium
			random_system = {
				limit = { has_star_flag = malgus_system }
				generate_wrill_mining_consortium_country = yes
				random_country = {
					limit = {
						has_country_flag = wrill_mining_consortium
					}
					save_global_event_target_as = wrill_mining_consortium
				}
			#	event_target:wrill_mining_consortium = { country_event = { id = btr_start_country.5 days = 1 } }
				log = "[event_target:wrill_mining_consortium.GetName]"
			}

			#Yamm Trade Zone
			random_system = {
				limit = { has_star_flag = kalabsha_system }
				generate_yamm_free_trade_zone_country = yes
				random_country = {
					limit = {
						has_country_flag = yamm_trade_zone
					}
					save_global_event_target_as = yamm_trade_zone
				}
				#event_target:yamm_trade_zone = { country_event = { id = btr_start_country.3 days = 1 } }
				log = "[event_target:yamm_trade_zone.GetName]"
			}

			#Zoryan Sovereignty
			random_system = {
				limit = { has_star_flag = faia_system }
				generate_zoryan_sovereignty_country = yes
				random_country = {
					limit = {
						has_country_flag = zoryan_sovereignty
					}
					save_global_event_target_as = zoryan_sovereignty
				}
			#	event_target:zoryan_sovereignty = { country_event = { id = btr_start_country.5 days = 1 } }
				log = "[event_target:zoryan_sovereignty.GetName]"
			}
			if = {
				limit = {
					is_btr_canon_map = yes
				}
				log = "btr_start_country.11 - INNDEPENDENT WORLD SETUP"
				establish_citadel_council_communication = yes
				establish_aite_warring_states_communications = yes
				establish_alahyan_terraformation_zone_communications = yes
				establish_altai_mineral_works_communications = yes
				establish_altakiril_union_communications = yes
				establish_anansi_manufacturing_communications = yes
				establish_polity_of_anhur_communications = yes
				establish_arvunan_administration_communications = yes
				establish_republic_of_asteria_communications = yes
				establish_chalkos_freehold_communications = yes
				establish_autonomy_of_cyrene_communications = yes
				establish_erinle_conservancy_communications = yes
				establish_union_of_ferris_fields_communications = yes
				establish_relic_mineral_works_communications = yes
				establish_flett_transort_union_communications = yes
				establish_freehold_of_freedoms_progress_communications = yes
				establish_state_of_garvug_communications = yes
				establish_ishtar_emporium_communications = yes
				establish_jenera_corporation_communications = yes
				establish_commonwealth_of_joab_communications = yes
				establish_korlus_recycling_union_communications = yes
				establish_kosh_development_corporation_communications = yes
				establish_logarisi_development_corporation_communications = yes
				establish_monrini_syndicate_communications = yes
				establish_authority_of_new_canton_communications = yes
				establish_noveria_development_corporation_communications = yes
				establish_league_of_sahi_dau_communications = yes
				establish_sanctum_metals_group_communications = yes
				establish_thalassocracy_of_talis_fia_communications = yes
				establish_thrednakka_autonomy_communications = yes
				establish_confederation_of_thunawanuro_communications = yes
				establish_free_port_of_tortuga_communications = yes
				establish_trident_exports_communications = yes
				establish_trigintan_league_communications = yes
				establish_peoples_authority_of_tyvor_communications = yes
				establish_wrill_mining_consortium_communications = yes
				establish_fal_III_manufactory_communications = yes
				establish_yamm_free_trade_zone_communications = yes
				establish_zoryan_sovereignty_communications = yes
			}
			if = {
				limit = { any_relation = { is_country_type = planet_state }
				}
				set_country_flag = has_encountered_other_empire
			}
		}
	}
}


country_event = {
	id = btr_start_country.12
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { 
				is_btr_canon_map = yes
			}
			log = "btr_start_country.12 - Started"
			generate_asari_republics_territory = yes
			log = "Asari Republics Territory Spawned"
			generate_salarian_union_territory = yes
			log = "Salarian Union Territory Established"
			generate_turian_hierarchy_territory = yes
			log = "Turian Hierarchy Territory Established"
			generate_systems_alliance_territory = yes
			log = "Systems Alliance Territory Established"
			generate_courts_of_dekuuna_territory = yes
			log = "Courts of Dekuuna Territory Established"
			generate_vol_protectorate_territory = yes
			log = "Vol Protectorate Territory Established"
			generate_illuminated_primacy_territory = yes
			log = "Illuminated Primacy Territory Established"
			generate_hegemony_of_kharshan_territory = yes
			log = "Hegemony of Khar'shan Territory Established"
			generate_aralakh_kahmat_territory = yes
			log = "Aralakh Kahmat Territory Established"
			generate_omega_empire_territory = yes
			log = "Omega Territory Established"
			generate_illium_corporate_interests_territory = yes
			log = "Illium Corporate Interests Territory Established"
			generate_caleston_directorate_territory = yes
			log = "Caleston Directorate Territory Established"
			generate_remnants_of_rakhana_territory = yes
			log = "Remnants of Rakhana Territory Established"
			generate_vorcha_clandom_territory = yes
			log = "Vorcha Clandom Territory Established"
			generate_sedriiace_collective_territory = yes
			log = "Sed'riicae Collective Territory Established"
			generate_lystheni_order_territory = yes
			log = "Lystheni Order Territory Established"
			generate_gothones_remnant_territory = yes
			log = "Gothones Remnant Territory Established"
			generate_geth_consensus_territory = yes
			log = "Geth Consensus Territory Established"
			generate_disciples_of_nazara_territory = yes
			log = "Disciples of Nazara Territory Established"
			generate_rachni_hive_territory = yes
			log = "Rachni Hive Territory Established"
			generate_citadel_council_territory = yes	
			log = "Citadel Council Territory Established"
			generate_independent_worlds_territory = yes
			log = "Independent World Territory Established"
		}
		log = "btr_start_country.12 - Completed"
	}
}

planet_event = {
	id = btr_start_country.13
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		log = "btr_start_country.13 - Started"

		if = {
			limit = { 
				is_btr_canon_map = yes
			}
			if = {
				limit = { 
					NOT = {
						has_global_flag = asari_republics_colonies_created
					}
				}
				generate_asari_republics_colonies = yes
				log = "Asari Republics Colonies Spawned"
			}
			if = {
				limit = { 
					NOT = {
						has_global_flag = salarian_union_colonies_created
					}
				}
				generate_salarian_union_colonies = yes
				log = "Salarian Union Colonies Spawned"
			}
			if = {
				limit = { 
					NOT = {
						has_global_flag = turian_hierarchy_colonies_created
					}
				}
				generate_turian_hierarchy_colonies = yes
				log = "Turian Hierarchy Colonies Spawned"
			}
			if = {
				limit = { 
					NOT = {
						has_global_flag = systems_alliance_colonies_created
					}
				}
				generate_systems_alliance_colonies = yes
				log = "Systems Alliance Colonies Spawned"
			}
			if = {
				limit = { 
					NOT = {
						has_global_flag = courts_of_dekuuna_colonies_created
					}
				}
				generate_courts_of_dekuuna_colonies = yes
				log = "Courts of Dekuuna Colonies Spawned"
			}
			if = {
				limit = { 
					NOT = {
						has_global_flag = vol_protectorate_colonies_created
					}
				}
				generate_vol_protectorate_colonies = yes
				log = "Vol Protectorate Colonies Spawned"
			}
			if = {
				limit = { 
					NOT = {
						has_global_flag = illuminated_primacy_colonies_created
					}
				}
				generate_illuminated_primacy_colonies = yes
				log = "Illuminated Primacy Colonies Spawned"
			}
			if = {
				limit = { 
					NOT = {
						has_global_flag = hegemony_of_kharshan_colonies_created
					}
				}
				generate_hegemony_of_kharshan_colonies = yes
				log = "Hegemony of Khar'shan Colonies Spawned"
			}
			if = {
				limit = { 
					NOT = {
						has_global_flag = sedriicae_collective_colonies_created
					}
				}
				generate_sedriicae_collective_colonies = yes
				log = "Sed'riicae Collective Colonies Spawned"
			}
			if = {
				limit = { 
					NOT = {
						has_global_flag = geth_consensus_colonies_created
					}
				}
				generate_geth_consensus_colonies = yes
				log = "Geth Consensus Colonies Spawned"
			}
			if = {
				limit = { 
					NOT = {
						has_global_flag = disciples_of_nazara_colonies_created
					}
				}
				generate_disciples_of_nazara_colonies = yes
				log = "Disciples of Nazara Colonies Spawned"
			}
		}

		log = "btr_start_country.13 - Completed"
	}
}

# Add Pops to colonies
country_event = {
	id = btr_start_country.14
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_owned_planet = {
			if = {
				limit = { 
					has_planet_flag = civil_station
				}
				hidden_effect = {
					if = {
						limit = {
							exists = owner
							owner = {
								is_megacorp = yes
								is_spiritualist = no
							}
						}
						custom_tooltip = district_corporate_complex_add
					}
				}
				custom_tooltip = district_commercial_wards_add
				hidden_effect = {
					if = {
						limit = {
							exists = owner
							owner = {
								has_origin = origin_necrophage
								has_trait = trait_necrophage
								NOT = { has_valid_civic = civic_fanatic_purifiers }
							}
						}
						custom_tooltip = district_elevation_center_add
					}
					if = {
						limit = {
							NOR = {
								is_planet_class = pc_asteroid_station
								is_planet_class = pc_ice_asteroid_station
								is_planet_class = pc_crystal_asteroid_station
							}
						}
						custom_tooltip = district_storage_yards_add
					}
					else = {
						custom_tooltip = district_docking_bay_add
					}
					if = {
						limit = { has_deposit = d_trading_route }
						custom_tooltip = district_free_port_add
					}
					
					if = {
						limit = {
							NOR = {
								has_planet_flag = energy_station
								has_planet_flag = mining_station
								has_planet_flag = research_station
								has_planet_flag = civil_station
								has_planet_flag = industrial_station
								has_planet_flag = military_station
								has_planet_flag = cultural_station
								has_planet_flag = prison_station
								#has_planet_flag = cracking_station
							}
						}
						set_planet_flag = civil_station
						validate_planet_buildings_and_districts = yes
					}
				}
			}
			if = {
				limit = { 
					has_planet_flag = research_station
				}
				hidden_effect = {
					if = {
						limit = { has_deposit = d_mineral_lodes }
						custom_tooltip = district_mining_complex_add
					}
					if = {
						limit = { has_deposit = d_ore_rich_rings }
						custom_tooltip = district_ore_processing_complex_add
					}
					if = {
						limit = { has_deposit = d_rich_regolith_formations }
						custom_tooltip = district_helium_extractor_add
					}
					if = {
						limit = { has_deposit = d_helium_clouds }
						custom_tooltip = district_helium_mining_facility_add
					}
					# if = {
					# 	limit = { 
					# 		owner = { has_technology = tech_mine_volatile_motes }
					# 		has_deposit = d_dust_cavities
					# 	}
					# 	custom_tooltip = district_mote_mine_add
					# }
					if = {
						limit = { 
							owner = { has_technology = tech_mine_exotic_gases }
							has_deposit = d_exotic_gases_vent
						}
						custom_tooltip = district_gas_refinery_add
					}
					# if = {
					# 	limit = { 
					# 		owner = { has_technology = tech_mine_rare_crystals }
					# 		has_deposit = d_crystal_cavities
					# 	}
					# 	custom_tooltip = district_crystal_mining_add
					# }
					# if = {
					# 	limit = { 
					# 		owner = { has_technology = tech_mine_zro }
					# 		has_deposit = d_zro_source
					# 	}
					# 	custom_tooltip = district_zro_harvesting_add
					# }
		
					if = {
						limit = {
							NOR = {
								has_planet_flag = energy_station
								has_planet_flag = mining_station
								has_planet_flag = research_station
								has_planet_flag = civil_station
								has_planet_flag = industrial_station
								has_planet_flag = military_station
								has_planet_flag = cultural_station
								has_planet_flag = prison_station
								#has_planet_flag = cracking_station
							}
						}
						set_planet_flag = mining_station
						validate_planet_buildings_and_districts = yes
					}
				}
			}
			if = {
				limit = { 
					has_planet_flag = military_station
				}
				custom_tooltip = district_barracks_add
				custom_tooltip = district_fortified_bunkers_add
				hidden_effect = {
					if = {
						limit = {
							NOR = {
								has_planet_flag = energy_station
								has_planet_flag = mining_station
								has_planet_flag = research_station
								has_planet_flag = civil_station
								has_planet_flag = industrial_station
								has_planet_flag = military_station
								has_planet_flag = cultural_station
								has_planet_flag = prison_station
								#has_planet_flag = cracking_station
							}
						}
						set_planet_flag = military_station
						validate_planet_buildings_and_districts = yes
					}
				}	
			}
			if = {
				limit = { 
					has_planet_flag = prison_station
				}
				hidden_effect = {
					custom_tooltip = decision_prison_station_effect_desc
					if = {
						limit = { owner = { is_authoritarian = yes } }
						custom_tooltip = add_political_persecution
					}
					if = {
						limit = { owner = { is_spiritualist = yes } }
						custom_tooltip = add_hunting_heretics
					}
					custom_tooltip = add_detention_operation
					
					if = {
						limit = {
							NOR = {
								has_planet_flag = energy_station
								has_planet_flag = mining_station
								has_planet_flag = research_station
								has_planet_flag = civil_station
								has_planet_flag = industrial_station
								has_planet_flag = military_station
								has_planet_flag = cultural_station
								has_planet_flag = prison_station
								#has_planet_flag = cracking_station
							}
						}
						set_planet_flag = prison_station
						validate_planet_buildings_and_districts = yes
					}
				}
			}
			if = {
				limit = { 
					has_planet_flag = industrial_station
				}
				custom_tooltip = district_foundry_plant_add
				hidden_effect = {
					if = {
						limit = { 
							owner = {
								country_uses_consumer_goods = yes
							}
						}
						custom_tooltip = district_manufacturing_complex_add
					}
					if = {
						limit = { 
							owner = {
								OR = {
									AND = {
										is_regular_empire = yes
										NOT = { has_policy_flag = robots_outlawed }
										has_technology = tech_robotic_workers
									}
									is_machine_empire = yes
								}
							}
						}
						custom_tooltip = district_assembly_factory_add
					}
					if = {
						limit = { 
							owner = { has_technology = tech_mine_living_metal }
							has_deposit = d_living_metal_deposit
						}
						custom_tooltip = district_living_metal_processing_add
					}
					
					if = {
						limit = {
							NOR = {
								has_planet_flag = energy_station
								has_planet_flag = mining_station
								has_planet_flag = research_station
								has_planet_flag = civil_station
								has_planet_flag = industrial_station
								has_planet_flag = military_station
								has_planet_flag = cultural_station
								has_planet_flag = prison_station
								#has_planet_flag = cracking_station
							}
						}
						set_planet_flag = industrial_station
						validate_planet_buildings_and_districts = yes
					}
				}
			}
		}

		log = "btr_start_country.11 - Generate Planetary Station Districts"
	}
}	

country_event = {
	id = btr_start_country.14
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		log = "btr_start_country.14"
		every_country = {
			random_owned_pop = {
				limit = {
					has_pop_flag = init_spawn
					is_same_species = owner_species
				}
				save_event_target_as = realOwnerSpecies
			}
			if = {
				limit = { exists = event_target:realOwnerSpecies }
				change_dominant_species = { species = event_target:realOwnerSpecies	}
			}
		}
		every_country = {
			limit = {
				NOR = {
					has_country_flag = hegemony_of_kharshan
					has_country_flag = aralakh_kahmat
					has_country_flag = omega_empire
					has_country_flag = vorcha_clandom
					has_country_flag = lystheni_order
					is_independent_colony = yes
				}
			}
			every_owned_pop_species = {
				limit = {
					NOT = {
						is_same_species = owner_species
					}
				}
				set_citizenship_type = { country = root type = citizenship_limited cooldown = yes }
				set_living_standard = { country = root type = living_standard_normal cooldown = yes }
			}
		}
		every_country = {
			limit = {
				OR = {
					has_country_flag = hegemony_of_kharshan
					has_country_flag = aralakh_kahmat
					has_country_flag = omega_empire
					has_country_flag = vorcha_clandom
					has_country_flag = lystheni_order
				}
			}
			every_owned_pop_species = {
				limit = {
					NOT = {
						is_same_species = owner_species
					}
				}
				set_citizenship_type = { country = root type = citizenship_slavery cooldown = yes }
				set_living_standard = { country = root type = living_standard_subsistence cooldown = yes }
			}
			set_policy = {
				policy = slavery
				option = slavery_allowed
				cooldown = yes
			}

		}
	}
}

country_event = {
	id = btr_start_country.19
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		log = "btr_start_country.19"
		if = {
			limit = { 
				is_btr_canon_map = yes
			}
			set_canon_starting_technologies = yes

			log = "Canon Starting Techs Given"
		}
		if = {
			limit = { 
				is_btr_sandbox_map = yes
			}
			give_technology = { tech = "tech_society_1" message = no }
			give_technology = { tech = "tech_engineering_1" message = no }
			give_technology = { tech = "tech_physics_1" message = no }
			give_technology = { tech = "tech_planetary_unification" message = no }

			log = "Sandbox Starting Techs Given"
		}
	}
}

#Survey home system and clear surrounding borders of random enemies.
country_event = {
	id = btr_start_country.20
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		log = "btr_start_country.20"	
		every_owned_planet = { 
			solar_system = { every_system_planet = { set_surveyed = { surveyed = yes surveyor = ROOT } } } 
			if = {
				limit = { is_homeworld = yes }
				set_planet_flag = "homeworld"
			}
		}
		every_system_within_border = {
			every_fleet_in_system = {
				limit = { 
					OR = { 
						AND = { exists = owner owner = { is_hostile = root } }					
						NOT = { exists = owner }
					}
				}
				delete_fleet = this
			}
		}		
	}
}

#Ensure Homeworld Pops
country_event = {
	id = btr_start_country.22
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_btr_empire = yes
	}
	immediate = {
		if = {
			limit = { is_btr_empire = yes }
			every_owned_planet = {
				every_owned_pop = {
					limit = { NOT = { has_pop_flag = init_spawn } }
					kill_pop = yes
				}
			}
		}
	}
}

# #Set Relics
# country_event = {
# 	id = sth_start.24
# 	hide_window = yes
# 	is_triggered_only = yes
# 	trigger = {}
# 	immediate = {
# 		log = "sth_start.24 - Relics handed out"	
# 		if = {
# 			limit = { has_country_flag = tellarian_technocracy sth_mirror_maps = no }
# 			add_relic = r_colAndor_scrolls
# 		}
# 		if = {
# 			limit = { has_country_flag = ferengi_alliance sth_mirror_maps = no }
# 			add_relic = r_rules_of_acquisition
# 		}
# 		if = {
# 			limit = { has_country_flag = betazoid_houses sth_mirror_maps = no }
# 			add_relic = r_sacred_chalice_of_rixx
# 		}
# 		if = {
# 			limit = { has_country_flag = klingon_empire sth_mirror_maps = no }
# 			#add_relic = r_hand_of_kully
# 			add_relic = r_sabaks_armour
# 			add_relic = r_gboj_torch
# 			add_relic = r_order_of_basai
# 			add_relic = r_order_of_batleth
# 			add_relic = r_yan_isleth
# 		}
# 	}
# }


#Starting Fleets
country_event = {
	id = btr_start_country.26
	hide_window = yes
	is_triggered_only = yes
	trigger = { is_btr_empire = yes }
	immediate = {
		if = {
			limit = { 
				is_btr_canon_map = yes
			}
			if = {
				limit = { 
					has_origin = asari_rep_origin
				}
				generate_asari_republic_starting_fleets = yes
			}
			if = {
				limit = { 
					has_origin = salarian_uni_origin
				}
				generate_salarian_union_starting_fleets = yes
			}
			if = {
				limit = { 
					has_origin = turian_hier_origin
				}
				generate_turian_hierarchy_starting_fleets = yes
			}
			if = {
				limit = { 
					has_origin = systems_all_origin
				}
				generate_systems_alliance_starting_fleets = yes
			}
			if = {
				limit = { 
					has_origin = courts_dek_origin
				}
				generate_courts_of_dekuuna_starting_fleets = yes
			}
			if = {
				limit = { 
					has_origin = vol_pro_origin
				}
				generate_vol_protectorate_starting_fleets = yes
			}
			if = {
				limit = { 
					has_origin = illuminated_pri_origin
				}
				generate_illuminated_primacy_starting_fleets = yes
			}
			if = {
				limit = { 
					has_origin = hegemony_kha_origin
				}
				generate_hegemony_of_kharshan_starting_fleets = yes
			}
			if = {
				limit = { 
					has_origin = aralakh_kah_origin
				}
				generate_aralakh_kahmat_starting_fleets = yes
			}
			if = {
				limit = { 
					has_origin = omega_emp_origin
				}
				generate_omega_starting_fleets = yes
			}
			if = {
				limit = { 
					has_origin = illium_cor_origin
				}
				generate_illium_corporate_interests_starting_fleets = yes
			}
			if = {
				limit = { 
					has_origin = caleston_dir_origin
				}
				generate_caleston_directorate_starting_fleets = yes
			}
			if = {
				limit = { 
					has_origin = sedriicae_col_origin
				}
				generate_sedriicae_collective_starting_fleets = yes
			}
			if = {
				limit = { 
					has_origin = lystheni_ord_origin
				}
				generate_lystheni_order_starting_fleets = yes
			}
			if = {
				limit = { 
					has_origin = gothones_rem_origin
				}
				generate_gothones_remnant_starting_fleets = yes
			}
			if = {
				limit = { 
					has_origin = rachni_hiv_origin
				}
				generate_rachni_hive_starting_fleets = yes
			}
			if = {
				limit = { 
					has_origin = geth_con_origin
				}
				generate_geth_consensus_starting_fleets = yes
			}
			if = {
				limit = { 
					has_origin = disciples_naz_origin
				}
				generate_disciples_nazara_starting_fleets = yes
			}
			if = {
				limit = { 
					has_origin = citadel_council_origin
				}
				generate_citadel_council_starting_fleets = yes
			}
		}
		if = {
			limit = { 
				is_btr_sandbox_map = yes
			}
			generate_sandbox_starting_fleets = yes
		}

		log = "btr_game_start.9 - Fleets Generated"
	}
}

#Set Starting Mining Stations
country_event = {
	id = btr_start_country.28
	hide_window = yes
	is_triggered_only = yes
	trigger = { is_btr_empire = yes }
	immediate = {	
		log = "btr_start_country.28"	
		every_planet_within_border = {
			limit = {
				has_deposit_for = shipclass_mining_station
				has_mining_station = no
			}
			create_mining_station = {
				owner = ROOT
			}
		}
		every_planet_within_border = {
			limit = {
				has_deposit_for = shipclass_research_station
				has_research_station = no
			}
			create_research_station = {
				owner = ROOT
			}
		}
	}
}

